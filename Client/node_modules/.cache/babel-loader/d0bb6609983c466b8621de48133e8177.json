{"ast":null,"code":"var _jsxFileName = \"/home/sharad_bagmar/Nutanix/aws_go/src/Components/Table.js\";\nimport React from 'react';\nimport '../Styles/Table-Styles.css';\nimport { Dropdown } from 'react-bootstrap';\nimport axios from 'axios';\nimport { CheckboxToggle } from 'react-rainbow-components';\nexport class Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instances: [],\n      region: 'us-east-2'\n    };\n  }\n\n  async getInstances() {\n    await axios.get(`http://localhost:8080/?region=${this.state.region}`).then(res => {\n      const instances = res.data;\n      this.setState({\n        instances: instances\n      });\n    }).catch(err => console.log(err));\n  }\n\n  async componentDidMount() {\n    await this.getInstances();\n  }\n\n  selectRegion(key) {\n    this.setState({\n      region: key\n    }, () => this.getInstances());\n  }\n\n  async startStopInstance(val, instance) {\n    let state = false;\n\n    if (val === false) {\n      state = 'START';\n    } else {\n      state = 'STOP';\n    }\n\n    await axios.post(`http://localhost:8080/state`, {\n      region: this.state.region,\n      instanceID: instance.InstanceID,\n      state: state\n    }).then(res => {\n      console.log(res);\n      this.getInstances();\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    const region = ['ap-south-1', 'eu-west-1', 'us-east-2', 'ap-southeast-1', 'ap-southeast-2', 'eu-central-1', 'ap-northeast-2', 'ap-northeast-1', 'us-east-1', 'sa-east-1', 'us-west-1', 'us-west-2'];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, region.map(item => {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        key: item,\n        eventKey: item,\n        onSelect: eventKey => this.selectRegion(eventKey),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, item);\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    }, \"AWS EC2 Instances\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"instances\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }\n    }, \"Instance ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 24\n      }\n    }, \"Image ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 24\n      }\n    }, \"Instance Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }\n    }, \"Availabilty Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 24\n      }\n    }, \"Status\")), this.state.instances.map((instance, index) => {\n      let value = instance.State === 'stopped' || instance.State === 'stopping' ? false : true;\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: instance.InstanceID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 33\n        }\n      }, instance.InstanceID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }, instance.ImageID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, instance.InstanceType), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }\n      }, instance.AvailabilityZone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CheckboxToggle, {\n        label: instance.State,\n        value: value,\n        onChange: () => this.startStopInstance(value, instance),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      })));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/src/Components/Table.js"],"names":["React","Dropdown","axios","CheckboxToggle","Table","Component","constructor","props","state","instances","region","getInstances","get","then","res","data","setState","catch","err","console","log","componentDidMount","selectRegion","key","startStopInstance","val","instance","post","instanceID","InstanceID","render","map","item","eventKey","index","value","State","ImageID","InstanceType","AvailabilityZone"],"mappings":"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","sourcesContent":["import React from 'react'\nimport '../Styles/Table-Styles.css'\nimport {Dropdown} from 'react-bootstrap';\nimport axios from 'axios';\nimport { CheckboxToggle } from 'react-rainbow-components';\n\n\nexport class Table extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n           instances: [],\n           region: 'us-east-2',\n        }\n     }\n    async getInstances() {\n        await axios.get(`http://localhost:8080/?region=${this.state.region}`)\n        .then(res => {\n        const instances = res.data;\n        this.setState({ instances : instances });   \n        }).catch(err => console.log(err))\n    }\n    async componentDidMount () {\n      await this.getInstances();\n    }\n\n    selectRegion (key) {        \n        this.setState({\n            region: key\n        }, () => this.getInstances() )\n    }\n\n    async startStopInstance (val, instance) {\n        let state = false\n        if (val === false){\n            state = 'START'\n        } else {\n            state = 'STOP'\n        }\n        await axios.post(`http://localhost:8080/state`, {\n             region: this.state.region,\n             instanceID: instance.InstanceID,\n             state: state\n        })\n        .then(res => {\n            console.log(res);\n            this.getInstances()\n        }).catch(err => console.log(err))\n    }\n\n    render() {\n        const region = [\n            'ap-south-1',\n            'eu-west-1',\n            'us-east-2',\n            'ap-southeast-1',\n            'ap-southeast-2',\n            'eu-central-1',\n            'ap-northeast-2',\n            'ap-northeast-1',\n            'us-east-1',\n            'sa-east-1',\n            'us-west-1',\n            'us-west-2'\n        ];\n       return (\n          <div className=\"table-container\">\n              <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Region\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                    {region.map(item => {\n                        return  <Dropdown.Item key={item} eventKey={item} onSelect={eventKey => this.selectRegion(eventKey)}>{item}</Dropdown.Item>\n                    })}\n                </Dropdown.Menu>\n                </Dropdown>\n             <h1 id='title'>AWS EC2 Instances</h1>\n             <table id='instances'>\n                <tbody>\n                   <tr>\n                       <th>Instance ID</th>\n                       <th>Image ID</th>\n                       <th>Instance Type</th>\n                       <th>Availabilty Status</th>\n                       <th>Status</th>\n                   </tr>\n                   {this.state.instances.map((instance, index) => {\n                       let value = instance.State === 'stopped' || instance.State === 'stopping' ? false : true;\n                        return (\n                            <tr key={instance.InstanceID}>\n                                <td>{instance.InstanceID}</td>\n                                <td>{instance.ImageID}</td>\n                                <td>{instance.InstanceType}</td>\n                                <td>{instance.AvailabilityZone}</td>\n                                <td>\n                                    <CheckboxToggle\n                                        label={instance.State}\n                                        value={value}\n                                        onChange={() => this.startStopInstance(value, instance)}\n                                    />\n                                </td>\n                            </tr>\n                        );\n                })}\n                </tbody>\n             </table>\n          </div>\n       )\n    }\n }"]},"metadata":{},"sourceType":"module"}