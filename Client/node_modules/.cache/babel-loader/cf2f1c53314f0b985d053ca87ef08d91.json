{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _AssistiveText = _interopRequireDefault(require(\"./../AssistiveText\"));\n\nvar _button = _interopRequireDefault(require(\"./styled/button\"));\n/**\n * Buttons Icons provide the user with visual iconography that\n * is typically used to invoke an event or action.\n */\n\n\nvar ButtonIcon = /*#__PURE__*/function (_Component) {\n  (0, _inherits2[\"default\"])(ButtonIcon, _Component);\n\n  function ButtonIcon(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, ButtonIcon);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(ButtonIcon).call(this, props));\n    _this.buttonRef = _react[\"default\"].createRef();\n    return _this;\n  }\n  /**\n   * Sets focus on the element.\n   * @public\n   */\n\n\n  (0, _createClass2[\"default\"])(ButtonIcon, [{\n    key: \"focus\",\n    value: function focus() {\n      this.buttonRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.buttonRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.buttonRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          type = _this$props.type,\n          disabled = _this$props.disabled,\n          tabIndex = _this$props.tabIndex,\n          onClick = _this$props.onClick,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          assistiveText = _this$props.assistiveText,\n          ariaHaspopup = _this$props.ariaHaspopup,\n          ariaPressed = _this$props.ariaPressed,\n          style = _this$props.style,\n          id = _this$props.id,\n          ariaControls = _this$props.ariaControls,\n          ariaExpanded = _this$props.ariaExpanded,\n          icon = _this$props.icon,\n          onKeyDown = _this$props.onKeyDown,\n          form = _this$props.form,\n          onMouseDown = _this$props.onMouseDown,\n          className = _this$props.className,\n          shaded = _this$props.shaded,\n          variant = _this$props.variant,\n          size = _this$props.size;\n      return _react[\"default\"].createElement(_button[\"default\"], {\n        onMouseDown: onMouseDown,\n        \"data-id\": \"button-icon-element\",\n        id: id,\n        className: className,\n        shaded: shaded,\n        variant: variant,\n        size: size,\n        style: style,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onClick: onClick,\n        title: title,\n        type: type,\n        \"aria-haspopup\": ariaHaspopup,\n        \"aria-controls\": ariaControls,\n        \"aria-expanded\": ariaExpanded,\n        \"aria-pressed\": ariaPressed,\n        onKeyDown: onKeyDown,\n        form: form,\n        ref: this.buttonRef\n      }, icon, _react[\"default\"].createElement(_AssistiveText[\"default\"], {\n        text: assistiveText\n      }));\n    }\n  }]);\n  return ButtonIcon;\n}(_react.Component);\n\nexports[\"default\"] = ButtonIcon;\nButtonIcon.propTypes = {\n  /** The icon to show if it is passed.\n   * It must be a svg icon or a font icon. It is a required value. */\n  icon: _propTypes[\"default\"].node,\n\n  /** The variant changes the appearance of the button. Accepted variants include\n   * base, brand, success, destructive, neutral, outline-brand, border, border-filled, inverse and border-inverse.\n   * This value defaults to base. */\n  variant: _propTypes[\"default\"].oneOf(['base', 'neutral', 'brand', 'outline-brand', 'destructive', 'success', 'border', 'border-filled', 'border-inverse', 'inverse']),\n\n  /** The size of the buttonIcon. For the base variant, options include x-small, small, medium,\n   * and large. For non-base variants, options include xx-small, x-small, small, and medium.\n   * This value defaults to medium. */\n  size: _propTypes[\"default\"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\n\n  /** Specify true when the button has a shadow around it.\n   * This value defaults to false.\n   * Only border-filled, brand, and success variant can be shaded. */\n  shaded: _propTypes[\"default\"].bool,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** Specifies the type of button. Valid values are button, reset, and submit.\n   * This value defaults to button. */\n  type: _propTypes[\"default\"].oneOf(['button', 'submit', 'reset']),\n\n  /** Specifies whether this button should be displayed in a disabled state.\n   * Disabled buttons can't be clicked. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The action that will be run when the button is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action that will be run when the user presses the mouse button. */\n  onMouseDown: _propTypes[\"default\"].func,\n\n  /** The action triggered when a keyboard key is pressed. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** A space-separated list of element IDs that\n   * this button controls the contents or presence of. */\n  ariaControls: _propTypes[\"default\"].string,\n\n  /** Indicates whether an element the button controls is expanded or collapsed.\n   * Valid values are 'true' or 'false'. */\n  ariaExpanded: _propTypes[\"default\"].bool,\n\n  /** Indicates that the element has a popup context menu or sub-level menu. */\n  ariaHaspopup: _propTypes[\"default\"].bool,\n\n  /** Indicates that the element has been pressed. */\n  ariaPressed: _propTypes[\"default\"].bool,\n\n  /** It must be the id attribute of a form element that the button is associated with. */\n  form: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string\n};\nButtonIcon.defaultProps = {\n  icon: null,\n  variant: 'base',\n  size: 'medium',\n  shaded: false,\n  title: undefined,\n  type: 'button',\n  disabled: false,\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onMouseDown: function onMouseDown() {},\n  onKeyDown: function onKeyDown() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  assistiveText: undefined,\n  ariaHaspopup: undefined,\n  className: undefined,\n  ariaPressed: undefined,\n  style: undefined,\n  id: undefined,\n  ariaControls: undefined,\n  ariaExpanded: undefined,\n  form: undefined\n};","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/node_modules/react-rainbow-components/components/ButtonIcon/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_propTypes","_AssistiveText","_button","ButtonIcon","_Component","props","_this","call","buttonRef","createRef","key","focus","current","click","blur","render","_this$props","title","type","disabled","tabIndex","onClick","onFocus","onBlur","assistiveText","ariaHaspopup","ariaPressed","style","id","ariaControls","ariaExpanded","icon","onKeyDown","form","onMouseDown","className","shaded","variant","size","createElement","ref","text","Component","propTypes","node","oneOf","bool","string","oneOfType","number","func","object","defaultProps","undefined"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8CAAD,CAApC;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,gBAAgB,GAAGL,sBAAsB,CAACD,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIO,aAAa,GAAGN,sBAAsB,CAACD,OAAO,CAAC,oCAAD,CAAR,CAA1C;;AAEA,IAAIQ,2BAA2B,GAAGP,sBAAsB,CAACD,OAAO,CAAC,kDAAD,CAAR,CAAxD;;AAEA,IAAIS,gBAAgB,GAAGR,sBAAsB,CAACD,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIU,UAAU,GAAGT,sBAAsB,CAACD,OAAO,CAAC,iCAAD,CAAR,CAAvC;;AAEA,IAAIW,MAAM,GAAGZ,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAApC;;AAEA,IAAIY,UAAU,GAAGX,sBAAsB,CAACD,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIa,cAAc,GAAGZ,sBAAsB,CAACD,OAAO,CAAC,oBAAD,CAAR,CAA3C;;AAEA,IAAIc,OAAO,GAAGb,sBAAsB,CAACD,OAAO,CAAC,iBAAD,CAAR,CAApC;AAEA;;;;;;AAIA,IAAIe,UAAU,GACd,aACA,UAAUC,UAAV,EAAsB;AACpB,GAAC,GAAGN,UAAU,CAAC,SAAD,CAAd,EAA2BK,UAA3B,EAAuCC,UAAvC;;AAEA,WAASD,UAAT,CAAoBE,KAApB,EAA2B;AACzB,QAAIC,KAAJ;;AAEA,KAAC,GAAGZ,gBAAgB,CAAC,SAAD,CAApB,EAAiC,IAAjC,EAAuCS,UAAvC;AACAG,IAAAA,KAAK,GAAG,CAAC,GAAGV,2BAA2B,CAAC,SAAD,CAA/B,EAA4C,IAA5C,EAAkD,CAAC,GAAGC,gBAAgB,CAAC,SAAD,CAApB,EAAiCM,UAAjC,EAA6CI,IAA7C,CAAkD,IAAlD,EAAwDF,KAAxD,CAAlD,CAAR;AACAC,IAAAA,KAAK,CAACE,SAAN,GAAkBT,MAAM,CAAC,SAAD,CAAN,CAAkBU,SAAlB,EAAlB;AACA,WAAOH,KAAP;AACD;AACD;;;;;;AAMA,GAAC,GAAGX,aAAa,CAAC,SAAD,CAAjB,EAA8BQ,UAA9B,EAA0C,CAAC;AACzCO,IAAAA,GAAG,EAAE,OADoC;AAEzCjB,IAAAA,KAAK,EAAE,SAASkB,KAAT,GAAiB;AACtB,WAAKH,SAAL,CAAeI,OAAf,CAAuBD,KAAvB;AACD;AACD;;;;;AALyC,GAAD,EAUvC;AACDD,IAAAA,GAAG,EAAE,OADJ;AAEDjB,IAAAA,KAAK,EAAE,SAASoB,KAAT,GAAiB;AACtB,WAAKL,SAAL,CAAeI,OAAf,CAAuBC,KAAvB;AACD;AACD;;;;;AALC,GAVuC,EAoBvC;AACDH,IAAAA,GAAG,EAAE,MADJ;AAEDjB,IAAAA,KAAK,EAAE,SAASqB,IAAT,GAAgB;AACrB,WAAKN,SAAL,CAAeI,OAAf,CAAuBE,IAAvB;AACD;AAJA,GApBuC,EAyBvC;AACDJ,IAAAA,GAAG,EAAE,QADJ;AAEDjB,IAAAA,KAAK,EAAE,SAASsB,MAAT,GAAkB;AACvB,UAAIC,WAAW,GAAG,KAAKX,KAAvB;AAAA,UACIY,KAAK,GAAGD,WAAW,CAACC,KADxB;AAAA,UAEIC,IAAI,GAAGF,WAAW,CAACE,IAFvB;AAAA,UAGIC,QAAQ,GAAGH,WAAW,CAACG,QAH3B;AAAA,UAIIC,QAAQ,GAAGJ,WAAW,CAACI,QAJ3B;AAAA,UAKIC,OAAO,GAAGL,WAAW,CAACK,OAL1B;AAAA,UAMIC,OAAO,GAAGN,WAAW,CAACM,OAN1B;AAAA,UAOIC,MAAM,GAAGP,WAAW,CAACO,MAPzB;AAAA,UAQIC,aAAa,GAAGR,WAAW,CAACQ,aARhC;AAAA,UASIC,YAAY,GAAGT,WAAW,CAACS,YAT/B;AAAA,UAUIC,WAAW,GAAGV,WAAW,CAACU,WAV9B;AAAA,UAWIC,KAAK,GAAGX,WAAW,CAACW,KAXxB;AAAA,UAYIC,EAAE,GAAGZ,WAAW,CAACY,EAZrB;AAAA,UAaIC,YAAY,GAAGb,WAAW,CAACa,YAb/B;AAAA,UAcIC,YAAY,GAAGd,WAAW,CAACc,YAd/B;AAAA,UAeIC,IAAI,GAAGf,WAAW,CAACe,IAfvB;AAAA,UAgBIC,SAAS,GAAGhB,WAAW,CAACgB,SAhB5B;AAAA,UAiBIC,IAAI,GAAGjB,WAAW,CAACiB,IAjBvB;AAAA,UAkBIC,WAAW,GAAGlB,WAAW,CAACkB,WAlB9B;AAAA,UAmBIC,SAAS,GAAGnB,WAAW,CAACmB,SAnB5B;AAAA,UAoBIC,MAAM,GAAGpB,WAAW,CAACoB,MApBzB;AAAA,UAqBIC,OAAO,GAAGrB,WAAW,CAACqB,OArB1B;AAAA,UAsBIC,IAAI,GAAGtB,WAAW,CAACsB,IAtBvB;AAuBA,aAAOvC,MAAM,CAAC,SAAD,CAAN,CAAkBwC,aAAlB,CAAgCrC,OAAO,CAAC,SAAD,CAAvC,EAAoD;AACzDgC,QAAAA,WAAW,EAAEA,WAD4C;AAEzD,mBAAW,qBAF8C;AAGzDN,QAAAA,EAAE,EAAEA,EAHqD;AAIzDO,QAAAA,SAAS,EAAEA,SAJ8C;AAKzDC,QAAAA,MAAM,EAAEA,MALiD;AAMzDC,QAAAA,OAAO,EAAEA,OANgD;AAOzDC,QAAAA,IAAI,EAAEA,IAPmD;AAQzDX,QAAAA,KAAK,EAAEA,KARkD;AASzDR,QAAAA,QAAQ,EAAEA,QAT+C;AAUzDC,QAAAA,QAAQ,EAAEA,QAV+C;AAWzDE,QAAAA,OAAO,EAAEA,OAXgD;AAYzDC,QAAAA,MAAM,EAAEA,MAZiD;AAazDF,QAAAA,OAAO,EAAEA,OAbgD;AAczDJ,QAAAA,KAAK,EAAEA,KAdkD;AAezDC,QAAAA,IAAI,EAAEA,IAfmD;AAgBzD,yBAAiBO,YAhBwC;AAiBzD,yBAAiBI,YAjBwC;AAkBzD,yBAAiBC,YAlBwC;AAmBzD,wBAAgBJ,WAnByC;AAoBzDM,QAAAA,SAAS,EAAEA,SApB8C;AAqBzDC,QAAAA,IAAI,EAAEA,IArBmD;AAsBzDO,QAAAA,GAAG,EAAE,KAAKhC;AAtB+C,OAApD,EAuBJuB,IAvBI,EAuBEhC,MAAM,CAAC,SAAD,CAAN,CAAkBwC,aAAlB,CAAgCtC,cAAc,CAAC,SAAD,CAA9C,EAA2D;AAClEwC,QAAAA,IAAI,EAAEjB;AAD4D,OAA3D,CAvBF,CAAP;AA0BD;AApDA,GAzBuC,CAA1C;AA+EA,SAAOrB,UAAP;AACD,CAjGD,CAiGEJ,MAAM,CAAC2C,SAjGT,CAFA;;AAqGAlD,OAAO,CAAC,SAAD,CAAP,GAAqBW,UAArB;AACAA,UAAU,CAACwC,SAAX,GAAuB;AACrB;;AAEAZ,EAAAA,IAAI,EAAE/B,UAAU,CAAC,SAAD,CAAV,CAAsB4C,IAHP;;AAKrB;;;AAGAP,EAAAA,OAAO,EAAErC,UAAU,CAAC,SAAD,CAAV,CAAsB6C,KAAtB,CAA4B,CAAC,MAAD,EAAS,SAAT,EAAoB,OAApB,EAA6B,eAA7B,EAA8C,aAA9C,EAA6D,SAA7D,EAAwE,QAAxE,EAAkF,eAAlF,EAAmG,gBAAnG,EAAqH,SAArH,CAA5B,CARY;;AAUrB;;;AAGAP,EAAAA,IAAI,EAAEtC,UAAU,CAAC,SAAD,CAAV,CAAsB6C,KAAtB,CAA4B,CAAC,UAAD,EAAa,SAAb,EAAwB,OAAxB,EAAiC,QAAjC,EAA2C,OAA3C,CAA5B,CAbe;;AAerB;;;AAGAT,EAAAA,MAAM,EAAEpC,UAAU,CAAC,SAAD,CAAV,CAAsB8C,IAlBT;;AAoBrB;AACA7B,EAAAA,KAAK,EAAEjB,UAAU,CAAC,SAAD,CAAV,CAAsB+C,MArBR;;AAuBrB;;AAEA7B,EAAAA,IAAI,EAAElB,UAAU,CAAC,SAAD,CAAV,CAAsB6C,KAAtB,CAA4B,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,CAA5B,CAzBe;;AA2BrB;;AAEA1B,EAAAA,QAAQ,EAAEnB,UAAU,CAAC,SAAD,CAAV,CAAsB8C,IA7BX;;AA+BrB;AACA1B,EAAAA,QAAQ,EAAEpB,UAAU,CAAC,SAAD,CAAV,CAAsBgD,SAAtB,CAAgC,CAAChD,UAAU,CAAC,SAAD,CAAV,CAAsBiD,MAAvB,EAA+BjD,UAAU,CAAC,SAAD,CAAV,CAAsB+C,MAArD,CAAhC,CAhCW;;AAkCrB;AACA1B,EAAAA,OAAO,EAAErB,UAAU,CAAC,SAAD,CAAV,CAAsBkD,IAnCV;;AAqCrB;AACAhB,EAAAA,WAAW,EAAElC,UAAU,CAAC,SAAD,CAAV,CAAsBkD,IAtCd;;AAwCrB;AACAlB,EAAAA,SAAS,EAAEhC,UAAU,CAAC,SAAD,CAAV,CAAsBkD,IAzCZ;;AA2CrB;AACA5B,EAAAA,OAAO,EAAEtB,UAAU,CAAC,SAAD,CAAV,CAAsBkD,IA5CV;;AA8CrB;AACA3B,EAAAA,MAAM,EAAEvB,UAAU,CAAC,SAAD,CAAV,CAAsBkD,IA/CT;;AAiDrB;AACA1B,EAAAA,aAAa,EAAExB,UAAU,CAAC,SAAD,CAAV,CAAsB+C,MAlDhB;;AAoDrB;;AAEAlB,EAAAA,YAAY,EAAE7B,UAAU,CAAC,SAAD,CAAV,CAAsB+C,MAtDf;;AAwDrB;;AAEAjB,EAAAA,YAAY,EAAE9B,UAAU,CAAC,SAAD,CAAV,CAAsB8C,IA1Df;;AA4DrB;AACArB,EAAAA,YAAY,EAAEzB,UAAU,CAAC,SAAD,CAAV,CAAsB8C,IA7Df;;AA+DrB;AACApB,EAAAA,WAAW,EAAE1B,UAAU,CAAC,SAAD,CAAV,CAAsB8C,IAhEd;;AAkErB;AACAb,EAAAA,IAAI,EAAEjC,UAAU,CAAC,SAAD,CAAV,CAAsB+C,MAnEP;;AAqErB;AACAZ,EAAAA,SAAS,EAAEnC,UAAU,CAAC,SAAD,CAAV,CAAsB+C,MAtEZ;;AAwErB;AACApB,EAAAA,KAAK,EAAE3B,UAAU,CAAC,SAAD,CAAV,CAAsBmD,MAzER;;AA2ErB;AACAvB,EAAAA,EAAE,EAAE5B,UAAU,CAAC,SAAD,CAAV,CAAsB+C;AA5EL,CAAvB;AA8EA5C,UAAU,CAACiD,YAAX,GAA0B;AACxBrB,EAAAA,IAAI,EAAE,IADkB;AAExBM,EAAAA,OAAO,EAAE,MAFe;AAGxBC,EAAAA,IAAI,EAAE,QAHkB;AAIxBF,EAAAA,MAAM,EAAE,KAJgB;AAKxBnB,EAAAA,KAAK,EAAEoC,SALiB;AAMxBnC,EAAAA,IAAI,EAAE,QANkB;AAOxBC,EAAAA,QAAQ,EAAE,KAPc;AAQxBC,EAAAA,QAAQ,EAAEiC,SARc;AASxBhC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE,CATN;AAUxBa,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB,CAAE,CAVd;AAWxBF,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB,CAAE,CAXV;AAYxBV,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE,CAZN;AAaxBC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB,CAAE,CAbJ;AAcxBC,EAAAA,aAAa,EAAE6B,SAdS;AAexB5B,EAAAA,YAAY,EAAE4B,SAfU;AAgBxBlB,EAAAA,SAAS,EAAEkB,SAhBa;AAiBxB3B,EAAAA,WAAW,EAAE2B,SAjBW;AAkBxB1B,EAAAA,KAAK,EAAE0B,SAlBiB;AAmBxBzB,EAAAA,EAAE,EAAEyB,SAnBoB;AAoBxBxB,EAAAA,YAAY,EAAEwB,SApBU;AAqBxBvB,EAAAA,YAAY,EAAEuB,SArBU;AAsBxBpB,EAAAA,IAAI,EAAEoB;AAtBkB,CAA1B","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _AssistiveText = _interopRequireDefault(require(\"./../AssistiveText\"));\n\nvar _button = _interopRequireDefault(require(\"./styled/button\"));\n\n/**\n * Buttons Icons provide the user with visual iconography that\n * is typically used to invoke an event or action.\n */\nvar ButtonIcon =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(ButtonIcon, _Component);\n\n  function ButtonIcon(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, ButtonIcon);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(ButtonIcon).call(this, props));\n    _this.buttonRef = _react[\"default\"].createRef();\n    return _this;\n  }\n  /**\n   * Sets focus on the element.\n   * @public\n   */\n\n\n  (0, _createClass2[\"default\"])(ButtonIcon, [{\n    key: \"focus\",\n    value: function focus() {\n      this.buttonRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.buttonRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.buttonRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          title = _this$props.title,\n          type = _this$props.type,\n          disabled = _this$props.disabled,\n          tabIndex = _this$props.tabIndex,\n          onClick = _this$props.onClick,\n          onFocus = _this$props.onFocus,\n          onBlur = _this$props.onBlur,\n          assistiveText = _this$props.assistiveText,\n          ariaHaspopup = _this$props.ariaHaspopup,\n          ariaPressed = _this$props.ariaPressed,\n          style = _this$props.style,\n          id = _this$props.id,\n          ariaControls = _this$props.ariaControls,\n          ariaExpanded = _this$props.ariaExpanded,\n          icon = _this$props.icon,\n          onKeyDown = _this$props.onKeyDown,\n          form = _this$props.form,\n          onMouseDown = _this$props.onMouseDown,\n          className = _this$props.className,\n          shaded = _this$props.shaded,\n          variant = _this$props.variant,\n          size = _this$props.size;\n      return _react[\"default\"].createElement(_button[\"default\"], {\n        onMouseDown: onMouseDown,\n        \"data-id\": \"button-icon-element\",\n        id: id,\n        className: className,\n        shaded: shaded,\n        variant: variant,\n        size: size,\n        style: style,\n        disabled: disabled,\n        tabIndex: tabIndex,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onClick: onClick,\n        title: title,\n        type: type,\n        \"aria-haspopup\": ariaHaspopup,\n        \"aria-controls\": ariaControls,\n        \"aria-expanded\": ariaExpanded,\n        \"aria-pressed\": ariaPressed,\n        onKeyDown: onKeyDown,\n        form: form,\n        ref: this.buttonRef\n      }, icon, _react[\"default\"].createElement(_AssistiveText[\"default\"], {\n        text: assistiveText\n      }));\n    }\n  }]);\n  return ButtonIcon;\n}(_react.Component);\n\nexports[\"default\"] = ButtonIcon;\nButtonIcon.propTypes = {\n  /** The icon to show if it is passed.\n   * It must be a svg icon or a font icon. It is a required value. */\n  icon: _propTypes[\"default\"].node,\n\n  /** The variant changes the appearance of the button. Accepted variants include\n   * base, brand, success, destructive, neutral, outline-brand, border, border-filled, inverse and border-inverse.\n   * This value defaults to base. */\n  variant: _propTypes[\"default\"].oneOf(['base', 'neutral', 'brand', 'outline-brand', 'destructive', 'success', 'border', 'border-filled', 'border-inverse', 'inverse']),\n\n  /** The size of the buttonIcon. For the base variant, options include x-small, small, medium,\n   * and large. For non-base variants, options include xx-small, x-small, small, and medium.\n   * This value defaults to medium. */\n  size: _propTypes[\"default\"].oneOf(['xx-small', 'x-small', 'small', 'medium', 'large']),\n\n  /** Specify true when the button has a shadow around it.\n   * This value defaults to false.\n   * Only border-filled, brand, and success variant can be shaded. */\n  shaded: _propTypes[\"default\"].bool,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** Specifies the type of button. Valid values are button, reset, and submit.\n   * This value defaults to button. */\n  type: _propTypes[\"default\"].oneOf(['button', 'submit', 'reset']),\n\n  /** Specifies whether this button should be displayed in a disabled state.\n   * Disabled buttons can't be clicked. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The action that will be run when the button is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action that will be run when the user presses the mouse button. */\n  onMouseDown: _propTypes[\"default\"].func,\n\n  /** The action triggered when a keyboard key is pressed. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** A description for assistive sreen readers. */\n  assistiveText: _propTypes[\"default\"].string,\n\n  /** A space-separated list of element IDs that\n   * this button controls the contents or presence of. */\n  ariaControls: _propTypes[\"default\"].string,\n\n  /** Indicates whether an element the button controls is expanded or collapsed.\n   * Valid values are 'true' or 'false'. */\n  ariaExpanded: _propTypes[\"default\"].bool,\n\n  /** Indicates that the element has a popup context menu or sub-level menu. */\n  ariaHaspopup: _propTypes[\"default\"].bool,\n\n  /** Indicates that the element has been pressed. */\n  ariaPressed: _propTypes[\"default\"].bool,\n\n  /** It must be the id attribute of a form element that the button is associated with. */\n  form: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string\n};\nButtonIcon.defaultProps = {\n  icon: null,\n  variant: 'base',\n  size: 'medium',\n  shaded: false,\n  title: undefined,\n  type: 'button',\n  disabled: false,\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onMouseDown: function onMouseDown() {},\n  onKeyDown: function onKeyDown() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  assistiveText: undefined,\n  ariaHaspopup: undefined,\n  className: undefined,\n  ariaPressed: undefined,\n  style: undefined,\n  id: undefined,\n  ariaControls: undefined,\n  ariaExpanded: undefined,\n  form: undefined\n};"]},"metadata":{},"sourceType":"script"}