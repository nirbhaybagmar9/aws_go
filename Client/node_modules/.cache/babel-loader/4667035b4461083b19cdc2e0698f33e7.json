{"ast":null,"code":"var _jsxFileName = \"/home/sharad_bagmar/go/src/github.com/nirbhaybagmar9/aws_go/Client/src/Components/Form.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport '../Styles/form-style.css';\nimport axios from 'axios';\nexport class Forms extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      validated: false\n    };\n    this.imageId = React.createRef();\n    this.tagKey = React.createRef();\n    this.tagValue = React.createRef();\n    this.region = React.createRef();\n  }\n\n  async createInstance() {\n    await axios.post('http://localhost:8080/create', {\n      imageId: this.imageId.current.value,\n      region: this.region.current.value,\n      tagKey: this.tagKey.current.value,\n      tagValue: this.tagValue.current.value\n    }).then(res => console.log(res)).catch(err => console.log(err));\n  }\n\n  handleSubmit(event) {\n    const value = this.imageId.current.value;\n    console.log(value);\n    const form = event.currentTarget;\n    console.log(event.target);\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    this.setState({\n      validated: true\n    }, () => this.createInstance());\n    event.stopPropagation();\n  }\n\n  render() {\n    const region = ['ap-south-1', 'eu-west-1', 'us-east-2', 'ap-southeast-1', 'ap-southeast-2', 'eu-central-1', 'ap-northeast-2', 'ap-northeast-1', 'us-east-1', 'sa-east-1', 'us-west-1', 'us-west-2'];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, \"Create Instance\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"align-items-center\",\n      noValidate: true,\n      validated: this.state.validated,\n      onSubmit: this.handleSubmit.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"exampleForm.ControlSelect1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(Form.Control, {\n      ref: this.region,\n      as: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, region.map(item => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: item,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 36\n        }\n      }, item);\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      md: \"4\",\n      controlId: \"validationImageId\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"Image ID (AMI ID)\"), /*#__PURE__*/React.createElement(Form.Control, {\n      ref: this.imageId,\n      name: \"imageId\",\n      required: true,\n      type: \"text\",\n      placeholder: \"Image ID\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Enter a valid Image ID\")), /*#__PURE__*/React.createElement(Form.Group, {\n      md: \"4\",\n      controlId: \"validationtagKey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, \"Tag Key\"), /*#__PURE__*/React.createElement(Form.Control, {\n      ref: this.tagKey,\n      required: true,\n      type: \"text\",\n      placeholder: \"Tag Key\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"Enter Tag Key\")), /*#__PURE__*/React.createElement(Form.Group, {\n      md: \"4\",\n      controlId: \"validationTagValue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Tag Value\"), /*#__PURE__*/React.createElement(Form.Control, {\n      ref: this.tagValue,\n      type: \"text\",\n      placeholder: \"Tag Value\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n      type: \"invalid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    }, \"Enter Tag Value\")), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, \"Create Instance\")));\n  }\n\n}","map":{"version":3,"sources":["/home/sharad_bagmar/go/src/github.com/nirbhaybagmar9/aws_go/Client/src/Components/Form.js"],"names":["React","Component","Form","Button","axios","Forms","constructor","props","state","validated","imageId","createRef","tagKey","tagValue","region","createInstance","post","current","value","then","res","console","log","catch","err","handleSubmit","event","form","currentTarget","target","checkValidity","preventDefault","stopPropagation","setState","render","bind","map","item"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport {Form, Button} from 'react-bootstrap'\nimport '../Styles/form-style.css'\nimport axios from 'axios'\nexport class Forms extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            validated: false\n        }\n        this.imageId = React.createRef(); \n        this.tagKey = React.createRef(); \n        this.tagValue = React.createRef(); \n        this.region = React.createRef(); \n\n     }\n    async createInstance () {\n        await axios.post('http://localhost:8080/create', {\n            imageId: this.imageId.current.value,\n            region: this.region.current.value,\n            tagKey: this.tagKey.current.value,\n            tagValue: this.tagValue.current.value\n        }).then(res => console.log(res)).catch(err => console.log(err))\n    }\n    handleSubmit (event) {\n        const value = this.imageId.current.value\n        console.log(value)\n        const form = event.currentTarget;\n        console.log(event.target)\n        if (form.checkValidity() === false) {\n          event.preventDefault();\n          event.stopPropagation();\n        }\n        this.setState({\n            validated: true\n        }, () => this.createInstance())\n        event.stopPropagation();\n      };\n    render() {\n        const region = [\n            'ap-south-1',\n            'eu-west-1',\n            'us-east-2',\n            'ap-southeast-1',\n            'ap-southeast-2',\n            'eu-central-1',\n            'ap-northeast-2',\n            'ap-northeast-1',\n            'us-east-1',\n            'sa-east-1',\n            'us-west-1',\n            'us-west-2'\n        ];\n        return (\n            <div className=\"form-container\">\n            <h2 className=\"h2\">Create Instance</h2>\n            <Form className=\"align-items-center\" noValidate validated={this.state.validated} onSubmit={this.handleSubmit.bind(this)}>\n                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Region</Form.Label>\n                    <Form.Control ref={this.region} as=\"select\">\n                        {region.map(item => {\n                            return <option key={item}>{item}</option>\n                        })}\n                    </Form.Control>\n                </Form.Group>\n              <Form.Group  md=\"4\" controlId=\"validationImageId\">\n                <Form.Label>Image ID (AMI ID)</Form.Label>\n                <Form.Control\n                ref={this.imageId}\n                  name=\"imageId\"\n                  required\n                  type=\"text\"\n                  placeholder=\"Image ID\"\n                />\n                <Form.Control.Feedback type=\"invalid\">Enter a valid Image ID</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group  md=\"4\" controlId=\"validationtagKey\">\n                <Form.Label>Tag Key</Form.Label>\n                <Form.Control\n                 ref={this.tagKey}\n                  required\n                  type=\"text\"\n                  placeholder=\"Tag Key\"\n                />\n                <Form.Control.Feedback type=\"invalid\">Enter Tag Key</Form.Control.Feedback>\n              </Form.Group>\n              <Form.Group  md=\"4\" controlId=\"validationTagValue\">\n                <Form.Label>Tag Value</Form.Label>\n                  <Form.Control\n                    ref={this.tagValue}\n                    type=\"text\"\n                    placeholder=\"Tag Value\"\n                    required\n                  />\n                  <Form.Control.Feedback type=\"invalid\">Enter Tag Value</Form.Control.Feedback>\n              </Form.Group>\n            <Button type=\"submit\">Create Instance</Button>\n          </Form>\n          </div>\n        );\n      }\n}\n\n"]},"metadata":{},"sourceType":"module"}