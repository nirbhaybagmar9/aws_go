{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Column;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n/* eslint-disable react/no-unused-prop-types */\n\n/**\n * @category DataView\n */\n\n\nfunction Column() {\n  return _react[\"default\"].createElement(\"div\", null);\n}\n\nColumn.propTypes = {\n  /**\n   * The header of the column. it could just an String with text is going\n   * to be rendered or component with a desired content.\n   */\n  header: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].node, _propTypes[\"default\"].string]),\n\n  /**\n   * The component class or function that is going to be use to render\n   * the content of each cell on this column. By default the cell is\n   * going to render the computed value(`data[rowIndex][field]`) for each cell.\n   */\n  component: _propTypes[\"default\"].func,\n\n  /**\n   * The field value is used to compute/map the value is going to be render\n   * for each cell. it's the name of a property in the data objects.\n   *\n   * e.g `data = [{ name: 'Max', ... }, {...}]`;\n   * field could be 'name' for a column that want to represent names on a collection of people.\n   */\n  field: _propTypes[\"default\"].string,\n\n  /**\n   * Sets whether the column should control the sorting order of the data.\n   * @ignore\n   */\n  sortable: _propTypes[\"default\"].bool,\n\n  /** Specifies the width of a column in pixels and make the column non-resizable.\n   *\n   * e.g  `width={100}` */\n  width: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** Specifies the inital width of a column in pixels and allows the column to be resizable.\n   * It must be within the minColumnWidth and maxColumnWidth values passed to Table.\n   *\n   * e.g  `defaultWidth={100}`\n   */\n  defaultWidth: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The data type to be used for data formatting in cell. */\n  type: _propTypes[\"default\"].oneOf(['text', 'action'])\n};\nColumn.defaultProps = {\n  header: undefined,\n  component: undefined,\n  field: undefined,\n  sortable: false,\n  width: undefined,\n  defaultWidth: undefined,\n  type: 'text'\n};","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/node_modules/react-rainbow-components/components/Column/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","Column","_react","_propTypes","createElement","propTypes","header","oneOfType","node","string","component","func","field","sortable","bool","width","number","defaultWidth","type","oneOf","defaultProps","undefined"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,MAArB;;AAEA,IAAIC,MAAM,GAAGP,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIO,UAAU,GAAGR,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;AAEA;;AAEA;;;;;AAGA,SAASK,MAAT,GAAkB;AAChB,SAAOC,MAAM,CAAC,SAAD,CAAN,CAAkBE,aAAlB,CAAgC,KAAhC,EAAuC,IAAvC,CAAP;AACD;;AAEDH,MAAM,CAACI,SAAP,GAAmB;AACjB;;;;AAIAC,EAAAA,MAAM,EAAEH,UAAU,CAAC,SAAD,CAAV,CAAsBI,SAAtB,CAAgC,CAACJ,UAAU,CAAC,SAAD,CAAV,CAAsBK,IAAvB,EAA6BL,UAAU,CAAC,SAAD,CAAV,CAAsBM,MAAnD,CAAhC,CALS;;AAOjB;;;;;AAKAC,EAAAA,SAAS,EAAEP,UAAU,CAAC,SAAD,CAAV,CAAsBQ,IAZhB;;AAcjB;;;;;;;AAOAC,EAAAA,KAAK,EAAET,UAAU,CAAC,SAAD,CAAV,CAAsBM,MArBZ;;AAuBjB;;;;AAIAI,EAAAA,QAAQ,EAAEV,UAAU,CAAC,SAAD,CAAV,CAAsBW,IA3Bf;;AA6BjB;;;AAGAC,EAAAA,KAAK,EAAEZ,UAAU,CAAC,SAAD,CAAV,CAAsBI,SAAtB,CAAgC,CAACJ,UAAU,CAAC,SAAD,CAAV,CAAsBa,MAAvB,EAA+Bb,UAAU,CAAC,SAAD,CAAV,CAAsBM,MAArD,CAAhC,CAhCU;;AAkCjB;;;;;AAKAQ,EAAAA,YAAY,EAAEd,UAAU,CAAC,SAAD,CAAV,CAAsBI,SAAtB,CAAgC,CAACJ,UAAU,CAAC,SAAD,CAAV,CAAsBa,MAAvB,EAA+Bb,UAAU,CAAC,SAAD,CAAV,CAAsBM,MAArD,CAAhC,CAvCG;;AAyCjB;AACAS,EAAAA,IAAI,EAAEf,UAAU,CAAC,SAAD,CAAV,CAAsBgB,KAAtB,CAA4B,CAAC,MAAD,EAAS,QAAT,CAA5B;AA1CW,CAAnB;AA4CAlB,MAAM,CAACmB,YAAP,GAAsB;AACpBd,EAAAA,MAAM,EAAEe,SADY;AAEpBX,EAAAA,SAAS,EAAEW,SAFS;AAGpBT,EAAAA,KAAK,EAAES,SAHa;AAIpBR,EAAAA,QAAQ,EAAE,KAJU;AAKpBE,EAAAA,KAAK,EAAEM,SALa;AAMpBJ,EAAAA,YAAY,EAAEI,SANM;AAOpBH,EAAAA,IAAI,EAAE;AAPc,CAAtB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Column;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/* eslint-disable react/no-unused-prop-types */\n\n/**\n * @category DataView\n */\nfunction Column() {\n  return _react[\"default\"].createElement(\"div\", null);\n}\n\nColumn.propTypes = {\n  /**\n   * The header of the column. it could just an String with text is going\n   * to be rendered or component with a desired content.\n   */\n  header: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].node, _propTypes[\"default\"].string]),\n\n  /**\n   * The component class or function that is going to be use to render\n   * the content of each cell on this column. By default the cell is\n   * going to render the computed value(`data[rowIndex][field]`) for each cell.\n   */\n  component: _propTypes[\"default\"].func,\n\n  /**\n   * The field value is used to compute/map the value is going to be render\n   * for each cell. it's the name of a property in the data objects.\n   *\n   * e.g `data = [{ name: 'Max', ... }, {...}]`;\n   * field could be 'name' for a column that want to represent names on a collection of people.\n   */\n  field: _propTypes[\"default\"].string,\n\n  /**\n   * Sets whether the column should control the sorting order of the data.\n   * @ignore\n   */\n  sortable: _propTypes[\"default\"].bool,\n\n  /** Specifies the width of a column in pixels and make the column non-resizable.\n   *\n   * e.g  `width={100}` */\n  width: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** Specifies the inital width of a column in pixels and allows the column to be resizable.\n   * It must be within the minColumnWidth and maxColumnWidth values passed to Table.\n   *\n   * e.g  `defaultWidth={100}`\n   */\n  defaultWidth: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The data type to be used for data formatting in cell. */\n  type: _propTypes[\"default\"].oneOf(['text', 'action'])\n};\nColumn.defaultProps = {\n  header: undefined,\n  component: undefined,\n  field: undefined,\n  sortable: false,\n  width: undefined,\n  defaultWidth: undefined,\n  type: 'text'\n};"]},"metadata":{},"sourceType":"script"}