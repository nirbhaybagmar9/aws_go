{"ast":null,"code":"var _jsxFileName = \"/home/sharad_bagmar/Nutanix/aws_go/src/Components/Table.js\";\nimport React from 'react';\nimport '../Styles/Table-Styles.css';\nimport { Dropdown } from 'react-bootstrap';\nimport axios from 'axios';\nexport class Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      instances: []\n    };\n  }\n\n  async componentDidMount() {\n    await axios.get(`http://localhost:8080/?region=us-east-2`).then(res => {\n      const instances = res.data;\n      this.setState({\n        instances: instances\n      });\n    }).catch(err => console.log(err));\n  }\n\n  async renderTableHeader() {\n    let header = await Object.keys(this.state.instances[0]);\n    return header.map((key, index) => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 18\n        }\n      }, key.toUpperCase());\n    });\n  }\n\n  selectRegion(key) {\n    console.log(key);\n  }\n\n  render() {\n    const region = [{\n      1: 'ap-south-1'\n    }, {\n      2: 'eu-west-1'\n    }, {\n      3: 'ap-southeast-1'\n    }, {\n      4: 'ap-southeast-2'\n    }, {\n      5: 'eu-central-1'\n    }, {\n      6: 'ap-northeast-2'\n    }, {\n      7: 'ap-northeast-1'\n    }, {\n      8: 'us-east-1'\n    }, {\n      9: 'sa-east-1'\n    }, {\n      10: 'us-west-1'\n    }, {\n      11: 'us-west-2'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"table-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown.Toggle, {\n      variant: \"success\",\n      id: \"dropdown-basic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(Dropdown.Menu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, region.map(item => {\n      return /*#__PURE__*/React.createElement(Dropdown.Item, {\n        eventKey: Object.keys(item)[0],\n        onSelect: eventKey => this.selectRegion(eventKey),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }, Object.values(item)[0]);\n    }))), /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }\n    }, \"AWS EC2 Instances\"), /*#__PURE__*/React.createElement(\"table\", {\n      id: \"instances\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }\n    }, \"Instance ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }\n    }, \"Image ID\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 24\n      }\n    }, \"Instance Type\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 24\n      }\n    }, \"Availabilty Status\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    }, \"Status\")), this.state.instances.map((instance, index) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: instance.InstanceID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 33\n        }\n      }, instance.InstanceID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, instance.ImageID), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }\n      }, instance.InstanceType), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 33\n        }\n      }, instance.AvailabilityZone), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }\n      }, instance.State));\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/src/Components/Table.js"],"names":["React","Dropdown","axios","Table","Component","constructor","props","state","instances","componentDidMount","get","then","res","data","setState","catch","err","console","log","renderTableHeader","header","Object","keys","map","key","index","toUpperCase","selectRegion","render","region","item","eventKey","values","instance","InstanceID","ImageID","InstanceType","AvailabilityZone","State"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,4BAAP;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACVC,MAAAA,SAAS,EAAE;AADD,KAAb;AAGF;;AACA,QAAMC,iBAAN,GAA2B;AACzB,UAAMP,KAAK,CAACQ,GAAN,CAAW,yCAAX,EACHC,IADG,CACEC,GAAG,IAAI;AACX,YAAMJ,SAAS,GAAGI,GAAG,CAACC,IAAtB;AACA,WAAKC,QAAL,CAAc;AAAEN,QAAAA,SAAS,EAAGA;AAAd,OAAd;AACD,KAJG,EAIDO,KAJC,CAIKC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJZ,CAAN;AAKD;;AACH,QAAMG,iBAAN,GAA2B;AACxB,QAAIC,MAAM,GAAG,MAAMC,MAAM,CAACC,IAAP,CAAY,KAAKf,KAAL,CAAWC,SAAX,CAAqB,CAArB,CAAZ,CAAnB;AACA,WAAOY,MAAM,CAACG,GAAP,CAAW,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC/B,0BAAO;AAAI,QAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiBD,GAAG,CAACE,WAAJ,EAAjB,CAAP;AACF,KAFM,CAAP;AAGF;;AACDC,EAAAA,YAAY,CAAEH,GAAF,EAAO;AACfP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACH;;AACDI,EAAAA,MAAM,GAAG;AACL,UAAMC,MAAM,GAAG,CAAC;AAAC,SAAG;AAAJ,KAAD,EACX;AAAC,SAAG;AAAJ,KADW,EAEX;AAAC,SAAG;AAAJ,KAFW,EAGX;AAAC,SAAG;AAAJ,KAHW,EAIX;AAAC,SAAG;AAAJ,KAJW,EAKX;AAAC,SAAG;AAAJ,KALW,EAMX;AAAC,SAAG;AAAJ,KANW,EAOX;AAAC,SAAG;AAAJ,KAPW,EAQX;AAAC,SAAG;AAAJ,KARW,EASX;AAAC,UAAI;AAAL,KATW,EAUX;AAAC,UAAI;AAAL,KAVW,CAAf;AAYD,wBACG;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD,CAAU,MAAV;AAAiB,MAAA,OAAO,EAAC,SAAzB;AAAmC,MAAA,EAAE,EAAC,gBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,MAAM,CAACN,GAAP,CAAWO,IAAI,IAAI;AAChB,0BAAQ,oBAAC,QAAD,CAAU,IAAV;AAAe,QAAA,QAAQ,EAAET,MAAM,CAACC,IAAP,CAAYQ,IAAZ,EAAkB,CAAlB,CAAzB;AAA+C,QAAA,QAAQ,EAAEC,QAAQ,IAAI,KAAKJ,YAAL,CAAkBI,QAAlB,CAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmGV,MAAM,CAACW,MAAP,CAAcF,IAAd,EAAoB,CAApB,CAAnG,CAAR;AACH,KAFA,CADL,CAJF,CADJ,eAWG;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXH,eAYG;AAAO,MAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADH,EAQI,KAAKvB,KAAL,CAAWC,SAAX,CAAqBe,GAArB,CAAyB,CAACU,QAAD,EAAWR,KAAX,KAAqB;AAC1C,0BACI;AAAI,QAAA,GAAG,EAAEQ,QAAQ,CAACC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,QAAQ,CAACC,UAAd,CADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,QAAQ,CAACE,OAAd,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKF,QAAQ,CAACG,YAAd,CAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKH,QAAQ,CAACI,gBAAd,CAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,QAAQ,CAACK,KAAd,CALJ,CADJ;AASP,KAVG,CARJ,CADH,CAZH,CADH;AAqCF;;AAzEsC","sourcesContent":["import React from 'react'\nimport '../Styles/Table-Styles.css'\nimport {Dropdown} from 'react-bootstrap';\nimport axios from 'axios';\n\n\nexport class Table extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n           instances: []\n        }\n     }\n      async componentDidMount () {\n        await axios.get(`http://localhost:8080/?region=us-east-2`)\n          .then(res => {\n            const instances = res.data;\n            this.setState({ instances : instances });   \n          }).catch(err => console.log(err))\n      }\n    async renderTableHeader () {\n       let header = await Object.keys(this.state.instances[0])\n       return header.map((key, index) => {\n          return <th key={index}>{key.toUpperCase()}</th>\n       })\n    }\n    selectRegion (key) {\n        console.log(key);\n    }\n    render() {\n        const region = [{1: 'ap-south-1'},\n            {2: 'eu-west-1'},\n            {3: 'ap-southeast-1'},\n            {4: 'ap-southeast-2'},\n            {5: 'eu-central-1'},\n            {6: 'ap-northeast-2'},\n            {7: 'ap-northeast-1'},\n            {8: 'us-east-1'},\n            {9: 'sa-east-1'},\n            {10: 'us-west-1'},\n            {11: 'us-west-2'}\n        ];\n       return (\n          <div className=\"table-container\">\n              <Dropdown>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Region\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                    {region.map(item => {\n                        return  <Dropdown.Item eventKey={Object.keys(item)[0]} onSelect={eventKey => this.selectRegion(eventKey)}>{Object.values(item)[0]}</Dropdown.Item>\n                    })}\n                </Dropdown.Menu>\n                </Dropdown>\n             <h1 id='title'>AWS EC2 Instances</h1>\n             <table id='instances'>\n                <tbody>\n                   <tr>\n                       <th>Instance ID</th>\n                       <th>Image ID</th>\n                       <th>Instance Type</th>\n                       <th>Availabilty Status</th>\n                       <th>Status</th>\n                   </tr>\n                   {this.state.instances.map((instance, index) => {\n                        return (\n                            <tr key={instance.InstanceID}>\n                                <td>{instance.InstanceID}</td>\n                                <td>{instance.ImageID}</td>\n                                <td>{instance.InstanceType}</td>\n                                <td>{instance.AvailabilityZone}</td>\n                                <td>{instance.State}</td>\n                            </tr>\n                        );\n                })}\n                </tbody>\n             </table>\n          </div>\n       )\n    }\n }"]},"metadata":{},"sourceType":"module"}