{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = decomposeColor;\n\nvar _index = require(\"./index\");\n\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor((0, _index.hexToRgba)(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error([\"Unsupported `\".concat(color, \"` color.\"), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\\n'));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/node_modules/react-rainbow-components/styles/helpers/color/decomposeColor.js"],"names":["Object","defineProperty","exports","value","decomposeColor","_index","require","color","type","charAt","hexToRgba","marker","indexOf","substring","Error","concat","join","values","length","split","map","parseFloat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,cAArB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASF,cAAT,CAAwBG,KAAxB,EAA+B;AAC7B;AACA,MAAIA,KAAK,CAACC,IAAV,EAAgB;AACd,WAAOD,KAAP;AACD;;AAED,MAAIA,KAAK,CAACE,MAAN,CAAa,CAAb,MAAoB,GAAxB,EAA6B;AAC3B,WAAOL,cAAc,CAAC,CAAC,GAAGC,MAAM,CAACK,SAAX,EAAsBH,KAAtB,CAAD,CAArB;AACD;;AAED,MAAII,MAAM,GAAGJ,KAAK,CAACK,OAAN,CAAc,GAAd,CAAb;AACA,MAAIJ,IAAI,GAAGD,KAAK,CAACM,SAAN,CAAgB,CAAhB,EAAmBF,MAAnB,CAAX;;AAEA,MAAI,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,MAAvB,EAA+BC,OAA/B,CAAuCJ,IAAvC,MAAiD,CAAC,CAAtD,EAAyD;AACvD,UAAM,IAAIM,KAAJ,CAAU,CAAC,gBAAgBC,MAAhB,CAAuBR,KAAvB,EAA8B,UAA9B,CAAD,EAA4C,gFAA5C,EAA8HS,IAA9H,CAAmI,IAAnI,CAAV,CAAN;AACD;;AAED,MAAIC,MAAM,GAAGV,KAAK,CAACM,SAAN,CAAgBF,MAAM,GAAG,CAAzB,EAA4BJ,KAAK,CAACW,MAAN,GAAe,CAA3C,EAA8CC,KAA9C,CAAoD,GAApD,CAAb;AACAF,EAAAA,MAAM,GAAGA,MAAM,CAACG,GAAP,CAAW,UAAUjB,KAAV,EAAiB;AACnC,WAAOkB,UAAU,CAAClB,KAAD,CAAjB;AACD,GAFQ,CAAT;AAGA,SAAO;AACLK,IAAAA,IAAI,EAAEA,IADD;AAELS,IAAAA,MAAM,EAAEA;AAFH,GAAP;AAID","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = decomposeColor;\n\nvar _index = require(\"./index\");\n\nfunction decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n\n  if (color.charAt(0) === '#') {\n    return decomposeColor((0, _index.hexToRgba)(color));\n  }\n\n  var marker = color.indexOf('(');\n  var type = color.substring(0, marker);\n\n  if (['rgb', 'rgba', 'hsl', 'hsla'].indexOf(type) === -1) {\n    throw new Error([\"Unsupported `\".concat(color, \"` color.\"), 'We support the following formats: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla().'].join('\\n'));\n  }\n\n  var values = color.substring(marker + 1, color.length - 1).split(',');\n  values = values.map(function (value) {\n    return parseFloat(value);\n  });\n  return {\n    type: type,\n    values: values\n  };\n}"]},"metadata":{},"sourceType":"script"}