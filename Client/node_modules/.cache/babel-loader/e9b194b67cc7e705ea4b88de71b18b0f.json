{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _content = _interopRequireDefault(require(\"./content\"));\n\nvar _button = _interopRequireDefault(require(\"./styled/button\"));\n/**\n * Buttons are clickable items used to perform an action.\n */\n\n\nvar Button = /*#__PURE__*/function (_Component) {\n  (0, _inherits2[\"default\"])(Button, _Component);\n\n  function Button(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Button);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Button).call(this, props));\n    _this.buttonRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Button, [{\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          isLoading = _this$props.isLoading;\n      return disabled || isLoading;\n    }\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.buttonRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.buttonRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.buttonRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          label = _this$props2.label,\n          children = _this$props2.children,\n          tabIndex = _this$props2.tabIndex,\n          onFocus = _this$props2.onFocus,\n          onBlur = _this$props2.onBlur,\n          onClick = _this$props2.onClick,\n          title = _this$props2.title,\n          type = _this$props2.type,\n          ariaHaspopup = _this$props2.ariaHaspopup,\n          id = _this$props2.id,\n          isLoading = _this$props2.isLoading,\n          variant = _this$props2.variant,\n          shaded = _this$props2.shaded,\n          ariaPressed = _this$props2.ariaPressed,\n          ariaControls = _this$props2.ariaControls,\n          ariaExpanded = _this$props2.ariaExpanded,\n          onKeyDown = _this$props2.onKeyDown,\n          form = _this$props2.form,\n          className = _this$props2.className;\n      return _react[\"default\"].createElement(_button[\"default\"], {\n        \"data-id\": \"button-element\",\n        id: id,\n        className: className,\n        style: style,\n        variant: variant,\n        isLoading: isLoading,\n        shaded: shaded,\n        disabled: this.isDisabled(),\n        tabIndex: tabIndex,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onClick: onClick,\n        title: title,\n        type: type,\n        \"aria-haspopup\": ariaHaspopup,\n        \"aria-controls\": ariaControls,\n        \"aria-expanded\": ariaExpanded,\n        \"aria-pressed\": ariaPressed,\n        onKeyDown: onKeyDown,\n        form: form,\n        ref: this.buttonRef\n      }, _react[\"default\"].createElement(_content[\"default\"], {\n        variant: variant,\n        label: label,\n        isLoading: isLoading\n      }, children));\n    }\n  }]);\n  return Button;\n}(_react.Component);\n\nexports[\"default\"] = Button;\nButton.propTypes = {\n  /** The text to be displayed inside the button. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The content of the button, used to render icon or text elements inside the button.\n   * Children take precedence over label. */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n\n  /** The variant changes the appearance of the button. Accepted variants include\n   * base, brand, success, destructive, neutral, outline-brand, border, border-filled, inverse and border-inverse. */\n  variant: _propTypes[\"default\"].oneOf(['base', 'neutral', 'brand', 'outline-brand', 'destructive', 'success', 'border', 'border-filled', 'inverse', 'border-inverse']),\n\n  /** Specifies true when the button has a shadow around it.\n   * Only neutral, brand, destructive and success variant can be shaded. */\n  shaded: _propTypes[\"default\"].bool,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** Specifies the type of button. Valid values are button, reset, and submit. */\n  type: _propTypes[\"default\"].oneOf(['button', 'submit', 'reset']),\n\n  /** Specifies whether this button should be displayed in a disabled state.\n   * Disabled buttons can't be clicked. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when a keyboard key is pressed. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** Indicates that the element has a popup context menu or sub-level menu. */\n  ariaHaspopup: _propTypes[\"default\"].bool,\n\n  /** A space-separated list of element IDs that\n   * this button controls the contents or presence of. */\n  ariaControls: _propTypes[\"default\"].string,\n\n  /** Indicates whether an element the button controls is expanded or collapsed.\n   * Valid values are 'true' or 'false'. */\n  ariaExpanded: _propTypes[\"default\"].bool,\n\n  /** Indicates that the element has been pressed. */\n  ariaPressed: _propTypes[\"default\"].bool,\n\n  /** It must be the id attribute of a form element that the button is associated with. */\n  form: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** If it is set to true, then a loading symbol is displayed. */\n  isLoading: _propTypes[\"default\"].bool\n};\nButton.defaultProps = {\n  label: undefined,\n  children: null,\n  variant: 'neutral',\n  shaded: false,\n  title: undefined,\n  type: 'button',\n  disabled: false,\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onKeyDown: function onKeyDown() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  ariaHaspopup: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  isLoading: false,\n  ariaPressed: undefined,\n  ariaControls: undefined,\n  ariaExpanded: undefined,\n  form: undefined\n};","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/node_modules/react-rainbow-components/components/Button/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_propTypes","_content","_button","Button","_Component","props","_this","call","buttonRef","createRef","key","isDisabled","_this$props","disabled","isLoading","focus","current","click","blur","render","_this$props2","style","label","children","tabIndex","onFocus","onBlur","onClick","title","type","ariaHaspopup","id","variant","shaded","ariaPressed","ariaControls","ariaExpanded","onKeyDown","form","className","createElement","ref","Component","propTypes","oneOfType","string","node","arrayOf","object","oneOf","bool","number","func","defaultProps","undefined"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _content = _interopRequireDefault(require(\"./content\"));\n\nvar _button = _interopRequireDefault(require(\"./styled/button\"));\n\n/**\n * Buttons are clickable items used to perform an action.\n */\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Button, _Component);\n\n  function Button(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Button);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Button).call(this, props));\n    _this.buttonRef = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  (0, _createClass2[\"default\"])(Button, [{\n    key: \"isDisabled\",\n    value: function isDisabled() {\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          isLoading = _this$props.isLoading;\n      return disabled || isLoading;\n    }\n    /**\n     * Sets focus on the element.\n     * @public\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.buttonRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.buttonRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.buttonRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          style = _this$props2.style,\n          label = _this$props2.label,\n          children = _this$props2.children,\n          tabIndex = _this$props2.tabIndex,\n          onFocus = _this$props2.onFocus,\n          onBlur = _this$props2.onBlur,\n          onClick = _this$props2.onClick,\n          title = _this$props2.title,\n          type = _this$props2.type,\n          ariaHaspopup = _this$props2.ariaHaspopup,\n          id = _this$props2.id,\n          isLoading = _this$props2.isLoading,\n          variant = _this$props2.variant,\n          shaded = _this$props2.shaded,\n          ariaPressed = _this$props2.ariaPressed,\n          ariaControls = _this$props2.ariaControls,\n          ariaExpanded = _this$props2.ariaExpanded,\n          onKeyDown = _this$props2.onKeyDown,\n          form = _this$props2.form,\n          className = _this$props2.className;\n      return _react[\"default\"].createElement(_button[\"default\"], {\n        \"data-id\": \"button-element\",\n        id: id,\n        className: className,\n        style: style,\n        variant: variant,\n        isLoading: isLoading,\n        shaded: shaded,\n        disabled: this.isDisabled(),\n        tabIndex: tabIndex,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        onClick: onClick,\n        title: title,\n        type: type,\n        \"aria-haspopup\": ariaHaspopup,\n        \"aria-controls\": ariaControls,\n        \"aria-expanded\": ariaExpanded,\n        \"aria-pressed\": ariaPressed,\n        onKeyDown: onKeyDown,\n        form: form,\n        ref: this.buttonRef\n      }, _react[\"default\"].createElement(_content[\"default\"], {\n        variant: variant,\n        label: label,\n        isLoading: isLoading\n      }, children));\n    }\n  }]);\n  return Button;\n}(_react.Component);\n\nexports[\"default\"] = Button;\nButton.propTypes = {\n  /** The text to be displayed inside the button. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** The content of the button, used to render icon or text elements inside the button.\n   * Children take precedence over label. */\n  children: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].arrayOf(_propTypes[\"default\"].node), _propTypes[\"default\"].object]),\n\n  /** The variant changes the appearance of the button. Accepted variants include\n   * base, brand, success, destructive, neutral, outline-brand, border, border-filled, inverse and border-inverse. */\n  variant: _propTypes[\"default\"].oneOf(['base', 'neutral', 'brand', 'outline-brand', 'destructive', 'success', 'border', 'border-filled', 'inverse', 'border-inverse']),\n\n  /** Specifies true when the button has a shadow around it.\n   * Only neutral, brand, destructive and success variant can be shaded. */\n  shaded: _propTypes[\"default\"].bool,\n\n  /** Displays tooltip text when the mouse moves over the element. */\n  title: _propTypes[\"default\"].string,\n\n  /** Specifies the type of button. Valid values are button, reset, and submit. */\n  type: _propTypes[\"default\"].oneOf(['button', 'submit', 'reset']),\n\n  /** Specifies whether this button should be displayed in a disabled state.\n   * Disabled buttons can't be clicked. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when a keyboard key is pressed. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** Indicates that the element has a popup context menu or sub-level menu. */\n  ariaHaspopup: _propTypes[\"default\"].bool,\n\n  /** A space-separated list of element IDs that\n   * this button controls the contents or presence of. */\n  ariaControls: _propTypes[\"default\"].string,\n\n  /** Indicates whether an element the button controls is expanded or collapsed.\n   * Valid values are 'true' or 'false'. */\n  ariaExpanded: _propTypes[\"default\"].bool,\n\n  /** Indicates that the element has been pressed. */\n  ariaPressed: _propTypes[\"default\"].bool,\n\n  /** It must be the id attribute of a form element that the button is associated with. */\n  form: _propTypes[\"default\"].string,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** If it is set to true, then a loading symbol is displayed. */\n  isLoading: _propTypes[\"default\"].bool\n};\nButton.defaultProps = {\n  label: undefined,\n  children: null,\n  variant: 'neutral',\n  shaded: false,\n  title: undefined,\n  type: 'button',\n  disabled: false,\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onKeyDown: function onKeyDown() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  ariaHaspopup: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  isLoading: false,\n  ariaPressed: undefined,\n  ariaControls: undefined,\n  ariaExpanded: undefined,\n  form: undefined\n};"]},"metadata":{},"sourceType":"script"}