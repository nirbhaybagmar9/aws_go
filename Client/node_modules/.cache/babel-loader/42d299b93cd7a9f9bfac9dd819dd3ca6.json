{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _inputBase = _interopRequireDefault(require(\"./inputBase\"));\n\nvar _inputRadio = _interopRequireDefault(require(\"./inputRadio\"));\n\nvar _inputCheckbox = _interopRequireDefault(require(\"./inputCheckbox\"));\n\nvar _withReduxForm = _interopRequireDefault(require(\"./../../libs/hocs/withReduxForm\"));\n/**\n * Text inputs are used for freeform data entry.\n * @category Form\n */\n\n\nvar Input = /*#__PURE__*/function (_Component) {\n  (0, _inherits2[\"default\"])(Input, _Component);\n\n  function Input(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Input);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Input).call(this, props));\n    _this.inputRef = _react[\"default\"].createRef();\n    return _this;\n  }\n  /**\n   * Sets focus on the element.\n   * @public\n   */\n\n\n  (0, _createClass2[\"default\"])(Input, [{\n    key: \"focus\",\n    value: function focus() {\n      this.inputRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.inputRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.inputRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n\n      if (type === 'radio') {\n        return _react[\"default\"].createElement(_inputRadio[\"default\"], (0, _extends2[\"default\"])({\n          ref: this.inputRef\n        }, this.props));\n      }\n\n      if (type === 'checkbox') {\n        return _react[\"default\"].createElement(_inputCheckbox[\"default\"], (0, _extends2[\"default\"])({\n          ref: this.inputRef\n        }, this.props));\n      }\n\n      return _react[\"default\"].createElement(_inputBase[\"default\"], (0, _extends2[\"default\"])({\n        ref: this.inputRef\n      }, this.props));\n    }\n  }]);\n  return Input;\n}(_react.Component);\n\nInput.propTypes = {\n  /** Specifies the value of an input element. */\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].bool]),\n\n  /** The name of the input. */\n  name: _propTypes[\"default\"].string,\n\n  /** The type of the input. This value defaults to text. */\n  type: _propTypes[\"default\"].oneOf(['text', 'password', 'datetime', 'datetime-local', 'date', 'month', 'time', 'week', 'number', 'email', 'url', 'search', 'tel', 'color', 'radio', 'checkbox']),\n\n  /** Text label for the input. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** A boolean to hide the input label. */\n  hideLabel: _propTypes[\"default\"].bool,\n\n  /** Text that is displayed when the field is empty, to prompt the user for a valid entry. */\n  placeholder: _propTypes[\"default\"].string,\n\n  /** The icon to show if it is passed. It must be a svg icon or a font icon. */\n  icon: _propTypes[\"default\"].node,\n\n  /** Describes the position of the icon with respect to body. Options include left and right.\n   * This value defaults to left. */\n  iconPosition: _propTypes[\"default\"].oneOf(['left', 'right']),\n\n  /** The maximum number of characters allowed in the field. */\n  maxLength: _propTypes[\"default\"].number,\n\n  /** The minimum number of characters allowed in the field. */\n  minLength: _propTypes[\"default\"].number,\n\n  /** Shows the help message below the input. */\n  bottomHelpText: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that an input field must be filled out before submitting the form.\n   * This value defaults to false. */\n  required: _propTypes[\"default\"].bool,\n\n  /** Specifies the regular expression that the input's value is checked against.\n   * This attribute is supported for text, search, url, tel, email, and password types. */\n  pattern: _propTypes[\"default\"].string,\n\n  /** Specifies that an input text will be centered. This value defaults to false. */\n  isCentered: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input will not have border. This value defaults to false. */\n  isBare: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input field must be filled out before submitting the form. */\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that an input element should be disabled. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input field is read-only. This value defaults to false. */\n  readOnly: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The action triggered when a value attribute changes. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** The action triggered when a key is pressed on the element. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** Set the input to checked state when true. It is used only for input type checkbox. */\n  checked: _propTypes[\"default\"].bool,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** A string indicating the type of autocomplete functionality.\n   * If any, to allow on the input.\n   *\n   * Values accepted by the autocomplete prop: name, organization-title, username, new-password,\n   * street-address, country, cc-name, transaction-currency, language, bday, sex, url, photo,\n   * tel, email and impp\n   *\n   * For a detailed list, go to: https://www.w3.org/TR/WCAG21/#input-purposes */\n  autoComplete: _propTypes[\"default\"].string\n};\nInput.defaultProps = {\n  value: undefined,\n  type: 'text',\n  name: undefined,\n  placeholder: null,\n  icon: undefined,\n  iconPosition: 'left',\n  maxLength: undefined,\n  minLength: undefined,\n  bottomHelpText: null,\n  required: false,\n  pattern: undefined,\n  isCentered: false,\n  isBare: false,\n  error: null,\n  disabled: false,\n  readOnly: false,\n  onChange: function onChange() {},\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onKeyDown: function onKeyDown() {},\n  checked: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  autoComplete: 'on',\n  label: undefined,\n  hideLabel: false\n};\n\nvar _default = (0, _withReduxForm[\"default\"])(Input);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["/home/sharad_bagmar/go/src/github.com/nirbhaybagmar9/aws_go/Client/node_modules/react-rainbow-components/components/Input/index.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","Object","defineProperty","exports","value","_extends2","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_react","_propTypes","_inputBase","_inputRadio","_inputCheckbox","_withReduxForm","Input","_Component","props","_this","call","inputRef","createRef","key","focus","current","click","blur","render","type","createElement","ref","Component","propTypes","oneOfType","string","bool","name","oneOf","label","node","hideLabel","placeholder","icon","iconPosition","maxLength","number","minLength","bottomHelpText","required","pattern","isCentered","isBare","error","disabled","readOnly","tabIndex","onChange","func","onClick","onFocus","onBlur","onKeyDown","checked","className","style","object","id","autoComplete","defaultProps","undefined","_default"],"mappings":"AAAA;;AAEA,IAAIA,uBAAuB,GAAGC,OAAO,CAAC,+CAAD,CAArC;;AAEA,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,8CAAD,CAApC;;AAEAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqB,KAAK,CAA1B;;AAEA,IAAIE,SAAS,GAAGL,sBAAsB,CAACD,OAAO,CAAC,gCAAD,CAAR,CAAtC;;AAEA,IAAIO,gBAAgB,GAAGN,sBAAsB,CAACD,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIQ,aAAa,GAAGP,sBAAsB,CAACD,OAAO,CAAC,oCAAD,CAAR,CAA1C;;AAEA,IAAIS,2BAA2B,GAAGR,sBAAsB,CAACD,OAAO,CAAC,kDAAD,CAAR,CAAxD;;AAEA,IAAIU,gBAAgB,GAAGT,sBAAsB,CAACD,OAAO,CAAC,uCAAD,CAAR,CAA7C;;AAEA,IAAIW,UAAU,GAAGV,sBAAsB,CAACD,OAAO,CAAC,iCAAD,CAAR,CAAvC;;AAEA,IAAIY,MAAM,GAAGb,uBAAuB,CAACC,OAAO,CAAC,OAAD,CAAR,CAApC;;AAEA,IAAIa,UAAU,GAAGZ,sBAAsB,CAACD,OAAO,CAAC,YAAD,CAAR,CAAvC;;AAEA,IAAIc,UAAU,GAAGb,sBAAsB,CAACD,OAAO,CAAC,aAAD,CAAR,CAAvC;;AAEA,IAAIe,WAAW,GAAGd,sBAAsB,CAACD,OAAO,CAAC,cAAD,CAAR,CAAxC;;AAEA,IAAIgB,cAAc,GAAGf,sBAAsB,CAACD,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,IAAIiB,cAAc,GAAGhB,sBAAsB,CAACD,OAAO,CAAC,iCAAD,CAAR,CAA3C;AAEA;;;;;;AAIA,IAAIkB,KAAK,GACT,aACA,UAAUC,UAAV,EAAsB;AACpB,GAAC,GAAGR,UAAU,CAAC,SAAD,CAAd,EAA2BO,KAA3B,EAAkCC,UAAlC;;AAEA,WAASD,KAAT,CAAeE,KAAf,EAAsB;AACpB,QAAIC,KAAJ;;AAEA,KAAC,GAAGd,gBAAgB,CAAC,SAAD,CAApB,EAAiC,IAAjC,EAAuCW,KAAvC;AACAG,IAAAA,KAAK,GAAG,CAAC,GAAGZ,2BAA2B,CAAC,SAAD,CAA/B,EAA4C,IAA5C,EAAkD,CAAC,GAAGC,gBAAgB,CAAC,SAAD,CAApB,EAAiCQ,KAAjC,EAAwCI,IAAxC,CAA6C,IAA7C,EAAmDF,KAAnD,CAAlD,CAAR;AACAC,IAAAA,KAAK,CAACE,QAAN,GAAiBX,MAAM,CAAC,SAAD,CAAN,CAAkBY,SAAlB,EAAjB;AACA,WAAOH,KAAP;AACD;AACD;;;;;;AAMA,GAAC,GAAGb,aAAa,CAAC,SAAD,CAAjB,EAA8BU,KAA9B,EAAqC,CAAC;AACpCO,IAAAA,GAAG,EAAE,OAD+B;AAEpCpB,IAAAA,KAAK,EAAE,SAASqB,KAAT,GAAiB;AACtB,WAAKH,QAAL,CAAcI,OAAd,CAAsBD,KAAtB;AACD;AACD;;;;;AALoC,GAAD,EAUlC;AACDD,IAAAA,GAAG,EAAE,OADJ;AAEDpB,IAAAA,KAAK,EAAE,SAASuB,KAAT,GAAiB;AACtB,WAAKL,QAAL,CAAcI,OAAd,CAAsBC,KAAtB;AACD;AACD;;;;;AALC,GAVkC,EAoBlC;AACDH,IAAAA,GAAG,EAAE,MADJ;AAEDpB,IAAAA,KAAK,EAAE,SAASwB,IAAT,GAAgB;AACrB,WAAKN,QAAL,CAAcI,OAAd,CAAsBE,IAAtB;AACD;AAJA,GApBkC,EAyBlC;AACDJ,IAAAA,GAAG,EAAE,QADJ;AAEDpB,IAAAA,KAAK,EAAE,SAASyB,MAAT,GAAkB;AACvB,UAAIC,IAAI,GAAG,KAAKX,KAAL,CAAWW,IAAtB;;AAEA,UAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,eAAOnB,MAAM,CAAC,SAAD,CAAN,CAAkBoB,aAAlB,CAAgCjB,WAAW,CAAC,SAAD,CAA3C,EAAwD,CAAC,GAAGT,SAAS,CAAC,SAAD,CAAb,EAA0B;AACvF2B,UAAAA,GAAG,EAAE,KAAKV;AAD6E,SAA1B,EAE5D,KAAKH,KAFuD,CAAxD,CAAP;AAGD;;AAED,UAAIW,IAAI,KAAK,UAAb,EAAyB;AACvB,eAAOnB,MAAM,CAAC,SAAD,CAAN,CAAkBoB,aAAlB,CAAgChB,cAAc,CAAC,SAAD,CAA9C,EAA2D,CAAC,GAAGV,SAAS,CAAC,SAAD,CAAb,EAA0B;AAC1F2B,UAAAA,GAAG,EAAE,KAAKV;AADgF,SAA1B,EAE/D,KAAKH,KAF0D,CAA3D,CAAP;AAGD;;AAED,aAAOR,MAAM,CAAC,SAAD,CAAN,CAAkBoB,aAAlB,CAAgClB,UAAU,CAAC,SAAD,CAA1C,EAAuD,CAAC,GAAGR,SAAS,CAAC,SAAD,CAAb,EAA0B;AACtF2B,QAAAA,GAAG,EAAE,KAAKV;AAD4E,OAA1B,EAE3D,KAAKH,KAFsD,CAAvD,CAAP;AAGD;AApBA,GAzBkC,CAArC;AA+CA,SAAOF,KAAP;AACD,CAjED,CAiEEN,MAAM,CAACsB,SAjET,CAFA;;AAqEAhB,KAAK,CAACiB,SAAN,GAAkB;AAChB;AACA9B,EAAAA,KAAK,EAAEQ,UAAU,CAAC,SAAD,CAAV,CAAsBuB,SAAtB,CAAgC,CAACvB,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAAvB,EAA+BxB,UAAU,CAAC,SAAD,CAAV,CAAsByB,IAArD,CAAhC,CAFS;;AAIhB;AACAC,EAAAA,IAAI,EAAE1B,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MALZ;;AAOhB;AACAN,EAAAA,IAAI,EAAElB,UAAU,CAAC,SAAD,CAAV,CAAsB2B,KAAtB,CAA4B,CAAC,MAAD,EAAS,UAAT,EAAqB,UAArB,EAAiC,gBAAjC,EAAmD,MAAnD,EAA2D,OAA3D,EAAoE,MAApE,EAA4E,MAA5E,EAAoF,QAApF,EAA8F,OAA9F,EAAuG,KAAvG,EAA8G,QAA9G,EAAwH,KAAxH,EAA+H,OAA/H,EAAwI,OAAxI,EAAiJ,UAAjJ,CAA5B,CARU;;AAUhB;AACAC,EAAAA,KAAK,EAAE5B,UAAU,CAAC,SAAD,CAAV,CAAsBuB,SAAtB,CAAgC,CAACvB,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAAvB,EAA+BxB,UAAU,CAAC,SAAD,CAAV,CAAsB6B,IAArD,CAAhC,CAXS;;AAahB;AACAC,EAAAA,SAAS,EAAE9B,UAAU,CAAC,SAAD,CAAV,CAAsByB,IAdjB;;AAgBhB;AACAM,EAAAA,WAAW,EAAE/B,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAjBnB;;AAmBhB;AACAQ,EAAAA,IAAI,EAAEhC,UAAU,CAAC,SAAD,CAAV,CAAsB6B,IApBZ;;AAsBhB;;AAEAI,EAAAA,YAAY,EAAEjC,UAAU,CAAC,SAAD,CAAV,CAAsB2B,KAAtB,CAA4B,CAAC,MAAD,EAAS,OAAT,CAA5B,CAxBE;;AA0BhB;AACAO,EAAAA,SAAS,EAAElC,UAAU,CAAC,SAAD,CAAV,CAAsBmC,MA3BjB;;AA6BhB;AACAC,EAAAA,SAAS,EAAEpC,UAAU,CAAC,SAAD,CAAV,CAAsBmC,MA9BjB;;AAgChB;AACAE,EAAAA,cAAc,EAAErC,UAAU,CAAC,SAAD,CAAV,CAAsBuB,SAAtB,CAAgC,CAACvB,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAAvB,EAA+BxB,UAAU,CAAC,SAAD,CAAV,CAAsB6B,IAArD,CAAhC,CAjCA;;AAmChB;;AAEAS,EAAAA,QAAQ,EAAEtC,UAAU,CAAC,SAAD,CAAV,CAAsByB,IArChB;;AAuChB;;AAEAc,EAAAA,OAAO,EAAEvC,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAzCf;;AA2ChB;AACAgB,EAAAA,UAAU,EAAExC,UAAU,CAAC,SAAD,CAAV,CAAsByB,IA5ClB;;AA8ChB;AACAgB,EAAAA,MAAM,EAAEzC,UAAU,CAAC,SAAD,CAAV,CAAsByB,IA/Cd;;AAiDhB;AACAiB,EAAAA,KAAK,EAAE1C,UAAU,CAAC,SAAD,CAAV,CAAsBuB,SAAtB,CAAgC,CAACvB,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAAvB,EAA+BxB,UAAU,CAAC,SAAD,CAAV,CAAsB6B,IAArD,CAAhC,CAlDS;;AAoDhB;AACAc,EAAAA,QAAQ,EAAE3C,UAAU,CAAC,SAAD,CAAV,CAAsByB,IArDhB;;AAuDhB;AACAmB,EAAAA,QAAQ,EAAE5C,UAAU,CAAC,SAAD,CAAV,CAAsByB,IAxDhB;;AA0DhB;AACAoB,EAAAA,QAAQ,EAAE7C,UAAU,CAAC,SAAD,CAAV,CAAsBuB,SAAtB,CAAgC,CAACvB,UAAU,CAAC,SAAD,CAAV,CAAsBmC,MAAvB,EAA+BnC,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAArD,CAAhC,CA3DM;;AA6DhB;AACAsB,EAAAA,QAAQ,EAAE9C,UAAU,CAAC,SAAD,CAAV,CAAsB+C,IA9DhB;;AAgEhB;AACAC,EAAAA,OAAO,EAAEhD,UAAU,CAAC,SAAD,CAAV,CAAsB+C,IAjEf;;AAmEhB;AACAE,EAAAA,OAAO,EAAEjD,UAAU,CAAC,SAAD,CAAV,CAAsB+C,IApEf;;AAsEhB;AACAG,EAAAA,MAAM,EAAElD,UAAU,CAAC,SAAD,CAAV,CAAsB+C,IAvEd;;AAyEhB;AACAI,EAAAA,SAAS,EAAEnD,UAAU,CAAC,SAAD,CAAV,CAAsB+C,IA1EjB;;AA4EhB;AACAK,EAAAA,OAAO,EAAEpD,UAAU,CAAC,SAAD,CAAV,CAAsByB,IA7Ef;;AA+EhB;AACA4B,EAAAA,SAAS,EAAErD,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAhFjB;;AAkFhB;AACA8B,EAAAA,KAAK,EAAEtD,UAAU,CAAC,SAAD,CAAV,CAAsBuD,MAnFb;;AAqFhB;AACAC,EAAAA,EAAE,EAAExD,UAAU,CAAC,SAAD,CAAV,CAAsBwB,MAtFV;;AAwFhB;;;;;;;;AAQAiC,EAAAA,YAAY,EAAEzD,UAAU,CAAC,SAAD,CAAV,CAAsBwB;AAhGpB,CAAlB;AAkGAnB,KAAK,CAACqD,YAAN,GAAqB;AACnBlE,EAAAA,KAAK,EAAEmE,SADY;AAEnBzC,EAAAA,IAAI,EAAE,MAFa;AAGnBQ,EAAAA,IAAI,EAAEiC,SAHa;AAInB5B,EAAAA,WAAW,EAAE,IAJM;AAKnBC,EAAAA,IAAI,EAAE2B,SALa;AAMnB1B,EAAAA,YAAY,EAAE,MANK;AAOnBC,EAAAA,SAAS,EAAEyB,SAPQ;AAQnBvB,EAAAA,SAAS,EAAEuB,SARQ;AASnBtB,EAAAA,cAAc,EAAE,IATG;AAUnBC,EAAAA,QAAQ,EAAE,KAVS;AAWnBC,EAAAA,OAAO,EAAEoB,SAXU;AAYnBnB,EAAAA,UAAU,EAAE,KAZO;AAanBC,EAAAA,MAAM,EAAE,KAbW;AAcnBC,EAAAA,KAAK,EAAE,IAdY;AAenBC,EAAAA,QAAQ,EAAE,KAfS;AAgBnBC,EAAAA,QAAQ,EAAE,KAhBS;AAiBnBE,EAAAA,QAAQ,EAAE,SAASA,QAAT,GAAoB,CAAE,CAjBb;AAkBnBD,EAAAA,QAAQ,EAAEc,SAlBS;AAmBnBX,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE,CAnBX;AAoBnBC,EAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB,CAAE,CApBX;AAqBnBC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB,CAAE,CArBT;AAsBnBC,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB,CAAE,CAtBf;AAuBnBC,EAAAA,OAAO,EAAEO,SAvBU;AAwBnBN,EAAAA,SAAS,EAAEM,SAxBQ;AAyBnBL,EAAAA,KAAK,EAAEK,SAzBY;AA0BnBH,EAAAA,EAAE,EAAEG,SA1Be;AA2BnBF,EAAAA,YAAY,EAAE,IA3BK;AA4BnB7B,EAAAA,KAAK,EAAE+B,SA5BY;AA6BnB7B,EAAAA,SAAS,EAAE;AA7BQ,CAArB;;AAgCA,IAAI8B,QAAQ,GAAG,CAAC,GAAGxD,cAAc,CAAC,SAAD,CAAlB,EAA+BC,KAA/B,CAAf;;AAEAd,OAAO,CAAC,SAAD,CAAP,GAAqBqE,QAArB","sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _inputBase = _interopRequireDefault(require(\"./inputBase\"));\n\nvar _inputRadio = _interopRequireDefault(require(\"./inputRadio\"));\n\nvar _inputCheckbox = _interopRequireDefault(require(\"./inputCheckbox\"));\n\nvar _withReduxForm = _interopRequireDefault(require(\"./../../libs/hocs/withReduxForm\"));\n\n/**\n * Text inputs are used for freeform data entry.\n * @category Form\n */\nvar Input =\n/*#__PURE__*/\nfunction (_Component) {\n  (0, _inherits2[\"default\"])(Input, _Component);\n\n  function Input(props) {\n    var _this;\n\n    (0, _classCallCheck2[\"default\"])(this, Input);\n    _this = (0, _possibleConstructorReturn2[\"default\"])(this, (0, _getPrototypeOf2[\"default\"])(Input).call(this, props));\n    _this.inputRef = _react[\"default\"].createRef();\n    return _this;\n  }\n  /**\n   * Sets focus on the element.\n   * @public\n   */\n\n\n  (0, _createClass2[\"default\"])(Input, [{\n    key: \"focus\",\n    value: function focus() {\n      this.inputRef.current.focus();\n    }\n    /**\n     * Sets click on the element.\n     * @public\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.inputRef.current.click();\n    }\n    /**\n     * Sets blur on the element.\n     * @public\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.inputRef.current.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var type = this.props.type;\n\n      if (type === 'radio') {\n        return _react[\"default\"].createElement(_inputRadio[\"default\"], (0, _extends2[\"default\"])({\n          ref: this.inputRef\n        }, this.props));\n      }\n\n      if (type === 'checkbox') {\n        return _react[\"default\"].createElement(_inputCheckbox[\"default\"], (0, _extends2[\"default\"])({\n          ref: this.inputRef\n        }, this.props));\n      }\n\n      return _react[\"default\"].createElement(_inputBase[\"default\"], (0, _extends2[\"default\"])({\n        ref: this.inputRef\n      }, this.props));\n    }\n  }]);\n  return Input;\n}(_react.Component);\n\nInput.propTypes = {\n  /** Specifies the value of an input element. */\n  value: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].bool]),\n\n  /** The name of the input. */\n  name: _propTypes[\"default\"].string,\n\n  /** The type of the input. This value defaults to text. */\n  type: _propTypes[\"default\"].oneOf(['text', 'password', 'datetime', 'datetime-local', 'date', 'month', 'time', 'week', 'number', 'email', 'url', 'search', 'tel', 'color', 'radio', 'checkbox']),\n\n  /** Text label for the input. */\n  label: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** A boolean to hide the input label. */\n  hideLabel: _propTypes[\"default\"].bool,\n\n  /** Text that is displayed when the field is empty, to prompt the user for a valid entry. */\n  placeholder: _propTypes[\"default\"].string,\n\n  /** The icon to show if it is passed. It must be a svg icon or a font icon. */\n  icon: _propTypes[\"default\"].node,\n\n  /** Describes the position of the icon with respect to body. Options include left and right.\n   * This value defaults to left. */\n  iconPosition: _propTypes[\"default\"].oneOf(['left', 'right']),\n\n  /** The maximum number of characters allowed in the field. */\n  maxLength: _propTypes[\"default\"].number,\n\n  /** The minimum number of characters allowed in the field. */\n  minLength: _propTypes[\"default\"].number,\n\n  /** Shows the help message below the input. */\n  bottomHelpText: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that an input field must be filled out before submitting the form.\n   * This value defaults to false. */\n  required: _propTypes[\"default\"].bool,\n\n  /** Specifies the regular expression that the input's value is checked against.\n   * This attribute is supported for text, search, url, tel, email, and password types. */\n  pattern: _propTypes[\"default\"].string,\n\n  /** Specifies that an input text will be centered. This value defaults to false. */\n  isCentered: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input will not have border. This value defaults to false. */\n  isBare: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input field must be filled out before submitting the form. */\n  error: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].node]),\n\n  /** Specifies that an input element should be disabled. This value defaults to false. */\n  disabled: _propTypes[\"default\"].bool,\n\n  /** Specifies that an input field is read-only. This value defaults to false. */\n  readOnly: _propTypes[\"default\"].bool,\n\n  /** Specifies the tab order of an element (when the tab button is used for navigating). */\n  tabIndex: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n\n  /** The action triggered when a value attribute changes. */\n  onChange: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element is clicked. */\n  onClick: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element receives focus. */\n  onFocus: _propTypes[\"default\"].func,\n\n  /** The action triggered when the element releases focus. */\n  onBlur: _propTypes[\"default\"].func,\n\n  /** The action triggered when a key is pressed on the element. */\n  onKeyDown: _propTypes[\"default\"].func,\n\n  /** Set the input to checked state when true. It is used only for input type checkbox. */\n  checked: _propTypes[\"default\"].bool,\n\n  /** A CSS class for the outer element, in addition to the component's base classes. */\n  className: _propTypes[\"default\"].string,\n\n  /** An object with custom style applied to the outer element. */\n  style: _propTypes[\"default\"].object,\n\n  /** The id of the outer element. */\n  id: _propTypes[\"default\"].string,\n\n  /** A string indicating the type of autocomplete functionality.\n   * If any, to allow on the input.\n   *\n   * Values accepted by the autocomplete prop: name, organization-title, username, new-password,\n   * street-address, country, cc-name, transaction-currency, language, bday, sex, url, photo,\n   * tel, email and impp\n   *\n   * For a detailed list, go to: https://www.w3.org/TR/WCAG21/#input-purposes */\n  autoComplete: _propTypes[\"default\"].string\n};\nInput.defaultProps = {\n  value: undefined,\n  type: 'text',\n  name: undefined,\n  placeholder: null,\n  icon: undefined,\n  iconPosition: 'left',\n  maxLength: undefined,\n  minLength: undefined,\n  bottomHelpText: null,\n  required: false,\n  pattern: undefined,\n  isCentered: false,\n  isBare: false,\n  error: null,\n  disabled: false,\n  readOnly: false,\n  onChange: function onChange() {},\n  tabIndex: undefined,\n  onClick: function onClick() {},\n  onFocus: function onFocus() {},\n  onBlur: function onBlur() {},\n  onKeyDown: function onKeyDown() {},\n  checked: undefined,\n  className: undefined,\n  style: undefined,\n  id: undefined,\n  autoComplete: 'on',\n  label: undefined,\n  hideLabel: false\n};\n\nvar _default = (0, _withReduxForm[\"default\"])(Input);\n\nexports[\"default\"] = _default;"]},"metadata":{},"sourceType":"script"}