{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Dataset;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n/* eslint-disable react/no-unused-prop-types */\n\n/** @category DataView */\n\n\nfunction Dataset() {\n  return _react[\"default\"].createElement(\"div\", null);\n}\n\nDataset.propTypes = {\n  /** The type of chart for the specific dataset, it can be different than the chart type */\n  type: _propTypes[\"default\"].oneOf(['line']),\n\n  /** The values to represent in the chart */\n  values: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].number),\n\n  /** The title for the dataset which appears in the legend and tooltips. */\n  title: _propTypes[\"default\"].string,\n\n  /** The fill color under the line. */\n  backgroundColor: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]),\n\n  /** The color of the line, if left undefined, the backgroundColor is used */\n  borderColor: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]),\n\n  /** The ID of the group to which this dataset belongs to\n   * (when stacked, each group will be a separate stack) */\n  stack: _propTypes[\"default\"].string,\n\n  /** Whether to fill the area under the line */\n  fill: _propTypes[\"default\"].bool\n};\nDataset.defaultProps = {\n  type: undefined,\n  values: [],\n  title: 'Dataset',\n  backgroundColor: undefined,\n  borderColor: undefined,\n  stack: undefined,\n  fill: false\n};","map":{"version":3,"sources":["/home/sharad_bagmar/Nutanix/aws_go/node_modules/react-rainbow-components/components/Dataset/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","Dataset","_react","_propTypes","createElement","propTypes","type","oneOf","values","arrayOf","number","title","string","backgroundColor","oneOfType","borderColor","stack","fill","bool","defaultProps","undefined"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,OAArB;;AAEA,IAAIC,MAAM,GAAGP,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAnC;;AAEA,IAAIO,UAAU,GAAGR,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAvC;AAEA;;AAEA;;;AACA,SAASK,OAAT,GAAmB;AACjB,SAAOC,MAAM,CAAC,SAAD,CAAN,CAAkBE,aAAlB,CAAgC,KAAhC,EAAuC,IAAvC,CAAP;AACD;;AAEDH,OAAO,CAACI,SAAR,GAAoB;AAClB;AACAC,EAAAA,IAAI,EAAEH,UAAU,CAAC,SAAD,CAAV,CAAsBI,KAAtB,CAA4B,CAAC,MAAD,CAA5B,CAFY;;AAIlB;AACAC,EAAAA,MAAM,EAAEL,UAAU,CAAC,SAAD,CAAV,CAAsBM,OAAtB,CAA8BN,UAAU,CAAC,SAAD,CAAV,CAAsBO,MAApD,CALU;;AAOlB;AACAC,EAAAA,KAAK,EAAER,UAAU,CAAC,SAAD,CAAV,CAAsBS,MARX;;AAUlB;AACAC,EAAAA,eAAe,EAAEV,UAAU,CAAC,SAAD,CAAV,CAAsBW,SAAtB,CAAgC,CAACX,UAAU,CAAC,SAAD,CAAV,CAAsBS,MAAvB,EAA+BT,UAAU,CAAC,SAAD,CAAV,CAAsBM,OAAtB,CAA8BN,UAAU,CAAC,SAAD,CAAV,CAAsBS,MAApD,CAA/B,CAAhC,CAXC;;AAalB;AACAG,EAAAA,WAAW,EAAEZ,UAAU,CAAC,SAAD,CAAV,CAAsBW,SAAtB,CAAgC,CAACX,UAAU,CAAC,SAAD,CAAV,CAAsBS,MAAvB,EAA+BT,UAAU,CAAC,SAAD,CAAV,CAAsBM,OAAtB,CAA8BN,UAAU,CAAC,SAAD,CAAV,CAAsBS,MAApD,CAA/B,CAAhC,CAdK;;AAgBlB;;AAEAI,EAAAA,KAAK,EAAEb,UAAU,CAAC,SAAD,CAAV,CAAsBS,MAlBX;;AAoBlB;AACAK,EAAAA,IAAI,EAAEd,UAAU,CAAC,SAAD,CAAV,CAAsBe;AArBV,CAApB;AAuBAjB,OAAO,CAACkB,YAAR,GAAuB;AACrBb,EAAAA,IAAI,EAAEc,SADe;AAErBZ,EAAAA,MAAM,EAAE,EAFa;AAGrBG,EAAAA,KAAK,EAAE,SAHc;AAIrBE,EAAAA,eAAe,EAAEO,SAJI;AAKrBL,EAAAA,WAAW,EAAEK,SALQ;AAMrBJ,EAAAA,KAAK,EAAEI,SANc;AAOrBH,EAAAA,IAAI,EAAE;AAPe,CAAvB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = Dataset;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n/* eslint-disable react/no-unused-prop-types */\n\n/** @category DataView */\nfunction Dataset() {\n  return _react[\"default\"].createElement(\"div\", null);\n}\n\nDataset.propTypes = {\n  /** The type of chart for the specific dataset, it can be different than the chart type */\n  type: _propTypes[\"default\"].oneOf(['line']),\n\n  /** The values to represent in the chart */\n  values: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].number),\n\n  /** The title for the dataset which appears in the legend and tooltips. */\n  title: _propTypes[\"default\"].string,\n\n  /** The fill color under the line. */\n  backgroundColor: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]),\n\n  /** The color of the line, if left undefined, the backgroundColor is used */\n  borderColor: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]),\n\n  /** The ID of the group to which this dataset belongs to\n   * (when stacked, each group will be a separate stack) */\n  stack: _propTypes[\"default\"].string,\n\n  /** Whether to fill the area under the line */\n  fill: _propTypes[\"default\"].bool\n};\nDataset.defaultProps = {\n  type: undefined,\n  values: [],\n  title: 'Dataset',\n  backgroundColor: undefined,\n  borderColor: undefined,\n  stack: undefined,\n  fill: false\n};"]},"metadata":{},"sourceType":"script"}