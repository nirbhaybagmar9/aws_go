{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = recomposeColor;\n\nfunction recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n  var valuesOutput = [];\n\n  if (!type || !values) {\n    return '';\n  }\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    valuesOutput = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    valuesOutput[0] = values[0];\n    valuesOutput[1] = \"\".concat(values[1], \"%\");\n    valuesOutput[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(valuesOutput.join(', '), \")\");\n}","map":{"version":3,"sources":["/home/sharad_bagmar/go/src/github.com/nirbhaybagmar9/aws_go/Client/node_modules/react-rainbow-components/styles/helpers/color/recomposeColor.js"],"names":["Object","defineProperty","exports","value","recomposeColor","color","type","values","valuesOutput","indexOf","map","n","i","parseInt","concat","join"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAAC,SAAD,CAAP,GAAqBE,cAArB;;AAEA,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AAEA,MAAI,CAACF,IAAD,IAAS,CAACC,MAAd,EAAsB;AACpB,WAAO,EAAP;AACD;;AAED,MAAID,IAAI,CAACG,OAAL,CAAa,KAAb,MAAwB,CAAC,CAA7B,EAAgC;AAC9B;AACAD,IAAAA,YAAY,GAAGD,MAAM,CAACG,GAAP,CAAW,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACxC,aAAOA,CAAC,GAAG,CAAJ,GAAQC,QAAQ,CAACF,CAAD,EAAI,EAAJ,CAAhB,GAA0BA,CAAjC;AACD,KAFc,CAAf;AAGD,GALD,MAKO,IAAIL,IAAI,CAACG,OAAL,CAAa,KAAb,MAAwB,CAAC,CAA7B,EAAgC;AACrCD,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkBD,MAAM,CAAC,CAAD,CAAxB;AACAC,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAGM,MAAH,CAAUP,MAAM,CAAC,CAAD,CAAhB,EAAqB,GAArB,CAAlB;AACAC,IAAAA,YAAY,CAAC,CAAD,CAAZ,GAAkB,GAAGM,MAAH,CAAUP,MAAM,CAAC,CAAD,CAAhB,EAAqB,GAArB,CAAlB;AACD;;AAED,SAAO,GAAGO,MAAH,CAAUR,IAAV,EAAgB,GAAhB,EAAqBQ,MAArB,CAA4BN,YAAY,CAACO,IAAb,CAAkB,IAAlB,CAA5B,EAAqD,GAArD,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = recomposeColor;\n\nfunction recomposeColor(color) {\n  var type = color.type;\n  var values = color.values;\n  var valuesOutput = [];\n\n  if (!type || !values) {\n    return '';\n  }\n\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    valuesOutput = values.map(function (n, i) {\n      return i < 3 ? parseInt(n, 10) : n;\n    });\n  } else if (type.indexOf('hsl') !== -1) {\n    valuesOutput[0] = values[0];\n    valuesOutput[1] = \"\".concat(values[1], \"%\");\n    valuesOutput[2] = \"\".concat(values[2], \"%\");\n  }\n\n  return \"\".concat(type, \"(\").concat(valuesOutput.join(', '), \")\");\n}"]},"metadata":{},"sourceType":"script"}