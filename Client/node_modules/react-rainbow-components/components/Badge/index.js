"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Badge;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _container = _interopRequireDefault(require("./styled/container"));

var _content = _interopRequireDefault(require("./content"));

/**
 * Badges are labels which hold small amounts of information.
 */
function Badge(props) {
  var className = props.className,
      style = props.style,
      label = props.label,
      title = props.title,
      children = props.children,
      variant = props.variant;

  if (children === null && label === null) {
    return null;
  }

  return _react["default"].createElement(_container["default"], {
    className: className,
    style: style,
    variant: variant,
    title: title
  }, _react["default"].createElement(_content["default"], {
    label: label
  }, children));
}

Badge.propTypes = {
  /** The text to be displayed inside the badge. */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** Displays tooltip text when the mouse moves over the element. */
  title: _propTypes["default"].string,

  /** The content of the badge. Used to render icon or text elements inside the badge.
   * Children takes precedence over label. */
  children: _propTypes["default"].node,

  /** The variant changes the appearance of the badge. Accepted variants include default,
   * inverse, lightest, brand and outline-brand. This value defaults to default. */
  variant: _propTypes["default"].oneOf(['default', 'inverse', 'lightest', 'outline-brand', 'brand']),

  /** A CSS class for the outer element, in addition to the component's base classes. */
  className: _propTypes["default"].string,

  /** An object with custom style applied to the outer element. */
  style: _propTypes["default"].object
};
Badge.defaultProps = {
  label: null,
  title: undefined,
  children: null,
  variant: 'default',
  className: undefined,
  style: undefined
};