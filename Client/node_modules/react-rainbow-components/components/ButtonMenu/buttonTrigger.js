"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = ButtonTrigger;

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _react = _interopRequireDefault(require("react"));

var _Button = _interopRequireDefault(require("../Button"));

var _RenderIf = _interopRequireDefault(require("../RenderIf"));

var _styledLeftIcon = _interopRequireDefault(require("./styled/styledLeftIcon"));

var _styledRightIcon = _interopRequireDefault(require("./styled/styledRightIcon"));

function ButtonTrigger(props) {
  var label = props.label,
      icon = props.icon,
      iconPosition = props.iconPosition,
      rest = (0, _objectWithoutProperties2["default"])(props, ["label", "icon", "iconPosition"]);
  var hasLeftIcon = icon && iconPosition !== 'right';
  var hasRightIcon = icon && iconPosition === 'right';
  return _react["default"].createElement(_Button["default"], rest, _react["default"].createElement(_RenderIf["default"], {
    isTrue: hasLeftIcon
  }, _react["default"].createElement(_styledLeftIcon["default"], null, icon)), label, _react["default"].createElement(_RenderIf["default"], {
    isTrue: hasRightIcon
  }, _react["default"].createElement(_styledRightIcon["default"], null, icon)));
}

ButtonTrigger.propTypes = {
  /** The text to be displayed inside the button. */
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),

  /** The icon to show if it is passed.
   * It must be a svg icon or a font icon. */
  icon: _propTypes["default"].node,

  /** Describes the position of the icon with respect to label. Options include left and right.
   * This value defaults to left. */
  iconPosition: _propTypes["default"].oneOf(['left', 'right'])
};
ButtonTrigger.defaultProps = {
  label: undefined,
  icon: null,
  iconPosition: 'left'
};