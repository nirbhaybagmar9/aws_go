"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var PageNodeItem = require('./node');
/**
 * Tree page object class.
 * @class
 */


var PageTree =
/*#__PURE__*/
function () {
  /**
   * Create a new Tree page object.
   * @constructor
   * @param {string} rootElement - The selector of the Tree root element.
   */
  function PageTree(rootElement) {
    (0, _classCallCheck2["default"])(this, PageTree);
    this.rootElement = rootElement;
  }
  /**
   * Returns a new Node page object of the element in item position.
   * @method
   * @param {number} itemPosition - The base 0 index of the Node.
   */


  (0, _createClass2["default"])(PageTree, [{
    key: "getNode",
    value: function getNode(itemPosition) {
      var items = $(this.rootElement).$$('[data-id="node-element-li"]');

      if (items[itemPosition]) {
        return new PageNodeItem("".concat(this.rootElement, " [data-id=\"node-element-li\"]:nth-child(").concat(itemPosition + 1, ")"));
      }

      return null;
    }
  }]);
  return PageTree;
}();

module.exports = PageTree;