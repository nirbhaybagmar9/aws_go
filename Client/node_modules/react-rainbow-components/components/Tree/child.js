"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = Child;

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _RenderIf = _interopRequireDefault(require("../RenderIf"));

var _treeChildren = _interopRequireDefault(require("./treeChildren"));

var _expandCollapseButton = _interopRequireDefault(require("./expandCollapseButton"));

var _itemContainerLi = _interopRequireDefault(require("./styled/itemContainerLi"));

var _nodeContainer = _interopRequireDefault(require("./styled/nodeContainer"));

var _label = _interopRequireDefault(require("./styled/label"));

var _iconContainer = _interopRequireDefault(require("./styled/iconContainer"));

var _inputCheckbox = _interopRequireDefault(require("./styled/inputCheckbox"));

var _childrenContainer = _interopRequireDefault(require("./styled/childrenContainer"));

function Child(props) {
  var label = props.label,
      isExpanded = props.isExpanded,
      isLoading = props.isLoading,
      children = props.children,
      isChecked = props.isChecked,
      icon = props.icon,
      nodePath = props.nodePath,
      onExpandCollapse = props.onExpandCollapse,
      onSelect = props.onSelect;
  var hasChildren = Array.isArray(children);
  var hasCheckbox = typeof isChecked === 'boolean' || isChecked === 'indeterminate';
  var hasIcon = !!icon;
  return _react["default"].createElement(_itemContainerLi["default"], {
    hasChildren: hasChildren,
    icon: icon,
    "data-id": "node-element-li"
  }, _react["default"].createElement(_nodeContainer["default"], {
    "data-id": "node-element"
  }, _react["default"].createElement(_expandCollapseButton["default"], {
    hasChildren: hasChildren,
    isExpanded: isExpanded === true,
    isLoading: isLoading === true,
    onClick: function onClick() {
      return onExpandCollapse({
        nodePath: nodePath
      });
    }
  }), _react["default"].createElement(_RenderIf["default"], {
    isTrue: hasCheckbox
  }, _react["default"].createElement(_inputCheckbox["default"], {
    type: "checkbox",
    checked: isChecked,
    onChange: function onChange() {
      return onSelect({
        nodePath: nodePath
      });
    }
  })), _react["default"].createElement(_RenderIf["default"], {
    isTrue: hasIcon
  }, _react["default"].createElement(_iconContainer["default"], null, icon)), _react["default"].createElement(_label["default"], {
    icon: icon
  }, label)), _react["default"].createElement(_RenderIf["default"], {
    isTrue: hasChildren && isExpanded
  }, _react["default"].createElement(_childrenContainer["default"], {
    icon: icon,
    isChecked: isChecked
  }, _react["default"].createElement(_treeChildren["default"], {
    data: children,
    onSelect: onSelect,
    onExpandCollapse: onExpandCollapse,
    nodePath: nodePath
  }))));
}

Child.propTypes = {
  label: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].node]),
  isChecked: _propTypes["default"].oneOf([true, false, 'indeterminate']),
  isExpanded: _propTypes["default"].bool,
  isLoading: _propTypes["default"].bool,
  icon: _propTypes["default"].node,
  children: _propTypes["default"].array,
  onExpandCollapse: _propTypes["default"].func,
  onSelect: _propTypes["default"].func,
  nodePath: _propTypes["default"].array
};
Child.defaultProps = {
  label: undefined,
  isChecked: undefined,
  isExpanded: undefined,
  isLoading: undefined,
  children: undefined,
  icon: null,
  onExpandCollapse: function onExpandCollapse() {},
  onSelect: function onSelect() {},
  nodePath: []
};