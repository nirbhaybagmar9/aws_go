"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _child = _interopRequireDefault(require("./../child"));

describe('<Child/>', function () {
  it('should render the PrimitiveCheckbox component when isChecked prop has the right value', function () {
    [true, false, 'indeterminate'].forEach(function (value) {
      var component = (0, _enzyme.mount)(_react["default"].createElement(_child["default"], {
        isChecked: value
      }));
      expect(component.find('PrimitiveCheckbox').exists()).toBe(true);
    });
  });
  it('should not render the PrimitiveCheckbox component when isChecked prop has the wrong value', function () {
    ['indeterminates', 'one', 'six'].forEach(function (value) {
      var component = (0, _enzyme.mount)(_react["default"].createElement(_child["default"], {
        isChecked: value
      }));
      expect(component.find('PrimitiveCheckbox').exists()).toBe(false);
    });
  });
  it('should render the TreeChildren component when children prop is not undefined', function () {
    var children = [{
      label: 'Tree Item'
    }, {
      label: 'Tree Item'
    }]; // eslint-disable-next-line react/no-children-prop

    var component = (0, _enzyme.mount)(_react["default"].createElement(_child["default"], {
      children: children,
      isExpanded: true
    }));
    expect(component.find('TreeChildren').exists()).toBe(true);
  });
});