"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _react = _interopRequireDefault(require("react"));

var _enzyme = require("enzyme");

var _constants = require("../../../libs/constants");

var _ = _interopRequireDefault(require("../"));

var _PicklistOption = _interopRequireDefault(require("../../PicklistOption"));

jest.useFakeTimers();
jest.mock('../helpers/scrollTo', function () {
  return jest.fn();
});
describe('InternalDropdown', function () {
  it('should fire onChange when option is selected by click', function () {
    var onChangeFn = jest.fn();
    var component = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      label: "Picklist",
      onChange: onChangeFn
    }, _react["default"].createElement(_PicklistOption["default"], {
      label: "Option 1",
      name: "option1"
    }), _react["default"].createElement(_PicklistOption["default"], {
      label: "Option 2",
      name: "option2"
    }), _react["default"].createElement(_PicklistOption["default"], {
      label: "Option 3",
      name: "option3"
    })));
    component.find('li').at(1).simulate('mousedown');
    expect(onChangeFn).toHaveBeenCalledWith({
      label: 'Option 2',
      name: 'option2',
      icon: null,
      value: undefined
    });
  });
  it('should fire onChange when option is selected by pressing ENTER key', function () {
    var onChangeFn = jest.fn();
    var component = (0, _enzyme.mount)(_react["default"].createElement(_["default"], {
      label: "Picklist",
      onChange: onChangeFn
    }, _react["default"].createElement(_PicklistOption["default"], {
      label: "Option 1",
      name: "option1"
    }), _react["default"].createElement(_PicklistOption["default"], {
      label: "Option 2",
      name: "option2"
    }), _react["default"].createElement(_PicklistOption["default"], {
      label: "Option 3",
      name: "option3"
    })));
    jest.runAllTimers();
    component.find('li').at(1).simulate('keyDown', {
      keyCode: _constants.ENTER_KEY
    });
    expect(onChangeFn).toHaveBeenCalledWith({
      label: 'Option 1',
      name: 'option1',
      icon: null,
      value: undefined
    });
  });
});